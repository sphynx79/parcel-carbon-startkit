{"version":3,"sources":["node_modules\\@carbon\\type\\scss\\_reset.scss","node_modules\\@carbon\\layout\\scss\\_convert.scss","node_modules\\@carbon\\type\\scss\\_font-family.scss","node_modules\\@carbon\\type\\scss\\font-face\\_sans.scss","node_modules\\@carbon\\type\\scss\\font-face\\_settings.scss","node_modules\\@carbon\\type\\scss\\_classes.scss","node_modules\\@carbon\\type\\scss\\_styles.scss","node_modules\\@carbon\\layout\\scss\\_breakpoint.scss","node_modules\\carbon-components\\scss\\globals\\scss\\vendor\\@carbon\\elements\\scss\\type\\_reset.scss","node_modules\\carbon-components\\scss\\globals\\scss\\vendor\\@carbon\\elements\\scss\\type\\_font-family.scss","node_modules\\carbon-components\\scss\\globals\\scss\\_css--reset.scss","node_modules\\carbon-components\\scss\\globals\\scss\\_helper-mixins.scss","node_modules\\carbon-components\\scss\\components\\button\\_button.scss","node_modules\\carbon-components\\scss\\globals\\scss\\_typography.scss","node_modules\\@carbon\\themes\\scss\\_theme-maps.scss","node_modules\\carbon-components\\scss\\globals\\scss\\vendor\\@carbon\\elements\\scss\\type\\_styles.scss","node_modules\\carbon-components\\scss\\components\\button\\_mixins.scss","node_modules\\carbon-components\\scss\\globals\\scss\\_theme-tokens.scss","node_modules\\carbon-components\\scss\\globals\\scss\\vendor\\@carbon\\elements\\scss\\motion\\motion.scss","node_modules\\@carbon\\colors\\scss\\mixins.scss","node_modules\\carbon-components\\scss\\globals\\scss\\_colors.scss","src\\init\\index.scss"],"names":[],"mappings":"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Ye,EAAA;;AD/Bf;EC8aA,mBL/b4C;EK+b5C,2CA3ZyC;EA2ZzC,oBL/b4C;EK+b5C,sBAzZoB,EAAA;;ADrBpB;EC8aA,eL/b4C;EK+b5C,2CAvYyC;EAuYzC,mBL/b4C;EK+b5C,iBArYe,EAAA;;ADzCf;EC8aA,kBL/b4C;EK+b5C,2CA7XyC;EA6XzC,iBL/b4C;EK+b5C,sBA3XoB,EAAA;;ADnDpB;EC8aA,mBL/b4C;EK+b5C,2CAnXyC;EAmXzC,oBL/b4C;EK+b5C,sBAjXoB,EAAA;;AD7DpB;EC8aA,mBL/b4C;EK+b5C,4CAzW0C;EAyW1C,qBL/b4C;EK+b5C,sBAvWoB,EAAA;;ADvEpB;EC8aA,eL/b4C;EK+b5C,4CA/V0C;EA+V1C,qBL/b4C;EK+b5C,iBA7Ve,EAAA;;ADjFf;EC8aA,kBL/b4C;EK+b5C,2CArVyC;EAqVzC,qBL/b4C;EK+b5C,iBAnVe,EAAA;;AD3Ff;EC8aA,kBL/b4C;EK+b5C,2CA3UyC;EA2UzC,oBL/b4C;EK+b5C,iBAzUe,EAAA;;ADrGf;EC8aA,eL/b4C;EK+b5C,2CAjUyC;EAiUzC,mBL/b4C;EK+b5C,iBA/Te,EAAA;;AD/Gf;EC8aA,iBL/b4C;EK+b5C,gBJjaU;EIiaV,iBA1Ne;EA0Nf,iBAzNe;EAgVf,uDAGC,EAAA;EC5bC;IF5GF;MC8aA,kBL/b4C;MK+b5C,iBArNmB;MA4UnB,wDAGC,EAAA,EDtiBA;EE0GC;IF5GF;MC8aA,eL/b4C;MK+b5C,iBAjNmB;MA+UnB,eL7jB4C,EAAA,EImB3C;;AAFD;EC8aA,kBL/b4C;EK+b5C,2CAvTyC;EAuTzC,iBAtTe;EAsTf,iBArTe;EA4af,qDAGC,EAAA;EC5bC;IF5GF;MC8aA,kBL/b4C;MK+b5C,iBAjTmB;MAwanB,wDAGC,EAAA,EDtiBA;EE0GC;IF5GF;MC8aA,iBL/b4C;MK6jB5C,iBL7jB4C,EAAA,EImB3C;;AAFD;EC8aA,kBL/b4C;EK+b5C,2CApSyC;EAoSzC,iBAnSe;EAmSf,iBAlSe;EAyZf,qDAGC,EAAA;EC5bC;IF5GF;MC8aA,kBL/b4C;MK+b5C,iBA9RmB;MAqZnB,wDAGC,EAAA,EDtiBA;EE0GC;IF5GF;MC8aA,eL/b4C;MK6jB5C,eL7jB4C,EAAA,EImB3C;;AAFD;EC8aA,eL/b4C;EK+b5C,2CAjRyC;EAiRzC,iBAhRe;EAgRf,iBA/Qe;EAsYf,qDAGC,EAAA;EC5bC;IF5GF;MC8aA,kBL/b4C;MK+b5C,iBA3QmB;MAkYnB,yDAGC,EAAA,EDtiBA;EE0GC;IF5GF;MC8aA,mBL/b4C;MK+b5C,iBAvQmB;MA8XnB,0DAGC,EAAA,EDtiBA;EE0GC;IF5GF;MC8aA,eL/b4C;MK+b5C,iBAnQmB;MA0XnB,qDAGC,EAAA,EDtiBA;EE0GC;IF5GF;MC8aA,kBL/b4C;MK6jB5C,kBL7jB4C,EAAA,EImB3C;;AAFD;EC8aA,eL/b4C;EK+b5C,4CAtP0C;EAsP1C,iBArPe;EAqPf,iBApPe;EA2Wf,qDAGC,EAAA;EC5bC;IF5GF;MC8aA,kBL/b4C;MK+b5C,iBAhPmB;MAuWnB,yDAGC,EAAA,EDtiBA;EE0GC;IF5GF;MC8aA,mBL/b4C;MK+b5C,iBA5OmB;MAmWnB,0DAGC,EAAA,EDtiBA;EE0GC;IF5GF;MC8aA,eL/b4C;MK+b5C,iBAxOmB;MA+VnB,qDAGC,EAAA,EDtiBA;EE0GC;IF5GF;MC8aA,kBL/b4C;MK6jB5C,kBL7jB4C,EAAA,EImB3C;;AAFD;EC8aA,kBL/b4C;EK+b5C,2CAvMyC;EAuMzC,iBAtMe;EAsMf,iBArMe;EA4Tf,qDAGC,EAAA;EC5bC;IF5GF;MC8aA,kBL/b4C;MKsjB5C,wDAGC,EAAA,EDtiBA;EE0GC;IF5GF;MC8aA,iBL/b4C;MK+b5C,iBA9LmB;MAqTnB,uDAGC,EAAA,EDtiBA;EE0GC;IF5GF;MC8aA,kBL/b4C;MK+b5C,iBA1LmB;MAiTnB,wDAGC,EAAA,EDtiBA;EE0GC;IF5GF;MC8aA,eL/b4C;MK+b5C,iBAtLmB;MAoTnB,eL7jB4C,EAAA,EImB3C;;AAFD;EC8aA,eL/b4C;EK+b5C,yCA5KuC;EA4KvC,iBA3Ke;EA2Kf,iBA1Ke;EAiSf,qDAGC,EAAA;EC5bC;IF5GF;MC8aA,kBL/b4C;MK+b5C,iBAtKmB;MA6RnB,yDAGC,EAAA,EDtiBA;EE0GC;IF5GF;MC8aA,mBL/b4C;MK+b5C,iBAlKmB;MAyRnB,0DAGC,EAAA,EDtiBA;EE0GC;IF5GF;MC8aA,eL/b4C;MK+b5C,iBA9JmB;MAqRnB,qDAGC,EAAA,EDtiBA;EE0GC;IF5GF;MC8aA,kBL/b4C;MK6jB5C,kBL7jB4C,EAAA,EImB3C;;AAFD;EC8aA,mBL/b4C;EK+b5C,yCAjJuC;EAiJvC,iBAhJe;EAgJf,iBA/Ie;EAsQf,sDAGC,EAAA;EC5bC;IF5GF;MC8aA,mBL/b4C;MKsjB5C,yDAGC,EAAA,EDtiBA;EE0GC;IF5GF;MC8aA,mBL/b4C;MKsjB5C,0DAGC,EAAA,EDtiBA;EE0GC;IF5GF;MC8aA,kBL/b4C;MK+b5C,iBArImB;MA4PnB,qDAGC,EAAA,EDtiBA;EE0GC;IF5GF;MC8aA,kBL/b4C;MK+b5C,iBAjImB;MA+PnB,kBL7jB4C,EAAA,EImB3C;;AAFD;EC8aA,mBL/b4C;EK+b5C,4CAvH0C;EAuH1C,iBAtHe;EAsHf,iBArHe;EA4Of,sDAGC,EAAA;EC5bC;IF5GF;MC8aA,mBL/b4C;MKsjB5C,yDAGC,EAAA,EDtiBA;EE0GC;IF5GF;MC8aA,mBL/b4C;MKsjB5C,0DAGC,EAAA,EDtiBA;EE0GC;IF5GF;MC8aA,kBL/b4C;MK+b5C,iBA3GmB;MAkOnB,qDAGC,EAAA,EDtiBA;EE0GC;IF5GF;MC8aA,kBL/b4C;MK+b5C,iBAvGmB;MAqOnB,kBL7jB4C,EAAA,EImB3C;;AAFD;EC8aA,mBL/b4C;EK+b5C,yCA7FuC;EA6FvC,iBA5Fe;EA4Ff,iBA3Fe;EAkNf,0DAGC,EAAA;EC5bC;IF5GF;MC8aA,kBL/b4C;MK+b5C,iBAvFmB;MA8MnB,uDAGC,EAAA,EDtiBA;EE0GC;IF5GF;MC8aA,kBL/b4C;MK+b5C,iBAnFmB;MAmFnB,uBAlFyB;MAyMzB,yDAGC,EAAA,EDtiBA;EE0GC;IF5GF;MC8aA,mBL/b4C;MK+b5C,iBA9EmB;MA8EnB,uBA7EyB;MAoMzB,0DAGC,EAAA,EDtiBA;EE0GC;IF5GF;MC8aA,kBL/b4C;MK+b5C,iBAzEmB;MAyEnB,uBAxEyB;MAsMzB,kBL7jB4C,EAAA,EImB3C;;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U,EAAA;;AFiEd;EACE,UAAU;EACV,SAAS,EAAA;;AAGX;EI/FA,yBFiBuB;EEhBvB,iBC4DyB;ED3DzB,mBAAmB;EACnB,yBJ6FuD;EI5FvD,cF0BgB,EAAA;EFiEhB;IIxFE,yBFsCoB,EAAA;EFkDtB;IInFE,sBAAsB;IACtB,kBAAkB;IAClB,WAAW;IACX,8CEnHyC,EAAA;ENmM3C;II5EE,qBAA+D;IAC/D,SAAmD;IACnD,yCAAkF;IAClF,0CAAmF;IACnF,6BAA6B,EAAA;EJwE/B;IIpEE,qBFJY,EAAA;EFwEd;IIhEE,SAA8B;IAC9B,UAA+B;IAC/B,4BAAgD;IAChD,2BAA+C;IAC/C,6BAA+C,EAAA;EJ4DjD;IIxDE,qBFKY,EAAA;EFmDd;IIjDE,cFrBY;IEsBZ,mBGnH0B;IHoH1B,qBGpH0B;IHqH1B,qBAAqB,EAAA;EJ8CvB;II1CE,yBFPqB,EAAA;EFiDvB;IItCE,aF3Bc,EAAA;EFiEhB;IAII,cErEY,EAAA;;AFyEhB;EIvGA,yBFkBuB;EEjBvB,iBC4DyB;ED3DzB,mBAAmB;EACnB,yBJqGuD;EIpGvD,cF0BgB,EAAA;EFyEhB;IIhGE,yBFyCsB,EAAA;EFuDxB;II3FE,sBAAsB;IACtB,kBAAkB;IAClB,WAAW;IACX,8CEnHyC,EAAA;EN2M3C;IIpFE,qBAA+D;IAC/D,SAAmD;IACnD,yCAAkF;IAClF,0CAAmF;IACnF,6BAA6B,EAAA;EJgF/B;II5EE,qBFJY,EAAA;EFgFd;IIxEE,SAA8B;IAC9B,UAA+B;IAC/B,4BAAgD;IAChD,2BAA+C;IAC/C,6BAA+C,EAAA;EJoEjD;IIhEE,qBFKY,EAAA;EF2Dd;IIzDE,cFrBY;IEsBZ,mBGnH0B;IHoH1B,qBGpH0B;IHqH1B,qBAAqB,EAAA;EJsDvB;IIlDE,yBFJuB,EAAA;EFsDzB;II9CE,aF3Bc,EAAA;EFyEhB;IAKI,cEvEe,EAAA;;AF2EnB;EIhHA,6BJiHsC;EIhHtC,iBC4DyB;ED3DzB,mBAAmB;EACnB,qBFgBuB;EEfvB,cFeuB,EAAA;EF6FvB;IIzGE,yBF2CqB,EAAA;EF8DvB;IIpGE,sBAAsB;IACtB,kBAAkB;IAClB,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","file":"parcel.e31bb0bc.css","sourceRoot":"..","sourcesContent":["//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import '@carbon/layout/scss/convert';\n@import 'font-family';\n\n/// Include a type reset for a given body and mono font family\n/// @param {Number} $base-font-size [$carbon--base-font-size] - The base font size for your document\n/// @param {String} $body-font-family [carbon--font-family('sans')] - The font family used on the `<body>` element\n/// @param {String} $mono-font-family [carbon--font-family('mono')] - The font family used on elements that require mono fonts, like the `<code>` element\n/// @access public\n/// @group @carbon/type\n@mixin carbon--type-reset(\n  $base-font-size: $carbon--base-font-size,\n  $body-font-family: carbon--font-family('sans'),\n  $mono-font-family: carbon--font-family('mono')\n) {\n  html {\n    font-size: $base-font-size;\n  }\n\n  body {\n    font-family: $body-font-family;\n    font-weight: 400;\n    text-rendering: optimizeLegibility;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  // IBM Plex uses semibold instead of bold, as a result we need to map\n  // tags that use `font-weight: bold` to the semibold value\n  strong {\n    font-weight: 600;\n  }\n\n  code {\n    font-family: $mono-font-family;\n  }\n}\n","//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n/// Default font size\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--base-font-size: 16px !default;\n\n/// Convert a given px unit to a rem unit\n/// @param {Number} $px - Number with px unit\n/// @return {Number} Number with rem unit\n/// @access public\n/// @group @carbon/layout\n@function carbon--rem($px) {\n  @return ($px / $carbon--base-font-size) * 1rem;\n}\n\n/// Convert a given px unit to a em unit\n/// @param {Number} $px - Number with px unit\n/// @return {Number} Number with em unit\n/// @access public\n/// @group @carbon/layout\n@function carbon--em($px) {\n  @return ($px / $carbon--base-font-size) * 1em;\n}\n","//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n/// Font family fallbacks for: IBM Plex Mono, IBM Plex Sans, IBM Plex Sans\n/// Condensed, IBM Plex Sans Hebrew, and IBM Plex Serif\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$carbon--font-families: (\n  'mono':\n    unquote(\n      \"'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace\"\n    ),\n  'sans': unquote(\"'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif\"),\n  'sans-condensed':\n    unquote(\"'IBM Plex Sans Condensed', 'Helvetica Neue', Arial, sans-serif\"),\n  'sans-hebrew':\n    unquote(\n      \"'IBM Plex Sans Hebrew', 'Helvetica Hebrew', 'Arial Hebrew', sans-serif\"\n    ),\n  'serif': unquote(\"'IBM Plex Serif', 'Georgia', Times, serif\"),\n);\n\n/// Get the font-family for an IBM Plex font\n/// @param {String} $name\n/// @return {String}\n/// @access public\n/// @group @carbon/type\n@function carbon--font-family($name) {\n  @return map-get($carbon--font-families, $name);\n}\n\n/// Include the `font-family` definition for the given name in your selector\n/// @param {String} $name\n/// @access public\n/// @group @carbon/type\n@mixin carbon--font-family($name) {\n  font-family: carbon--font-family($name);\n}\n\n/// Suggested font weights to be used in product\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$carbon--font-weights: (\n  'light': 300,\n  'regular': 400,\n  'semibold': 600,\n);\n\n/// Retrieve the font-weight value for a given name\n/// @param {String} $weight\n/// @return {Number}\n/// @access public\n/// @group @carbon/type\n@function carbon--font-weight($weight) {\n  @return map-get($carbon--font-weights, $weight);\n}\n\n/// Set the `font-weight` property with the value for a given name\n/// @param {String} $weight\n/// @access public\n/// @group @carbon/type\n@mixin carbon--font-weight($weight) {\n  font-weight: carbon--font-weight($weight);\n}\n","//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import 'settings';\n\n/// Sans `@font-face`'s\n/// @access public\n/// @group @carbon/type\n@mixin carbon--font-face-sans {\n  // .woff support for IE11\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Light Italic'), local('IBMPlexSans-LightItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmvIRcdvfo.woff)\n        format('woff');\n  }\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Italic'), local('IBMPlexSans-Italic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX-KVElMYYaJe8bpLHnCwDKhdTuF6ZP.woff)\n        format('woff');\n  }\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans SemiBold Italic'),\n      local('IBMPlexSans-SemiBoldItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmyIJcdvfo.woff)\n        format('woff');\n  }\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Light'), local('IBMPlexSans-Light'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjXr8AIFscg.woff)\n        format('woff');\n  }\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans'), local('IBMPlexSans'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYXgKVElMYYaJe8bpLHnCwDKhdHeEw.woff)\n        format('woff');\n  }\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans SemiBold'), local('IBMPlexSans-SemiBold'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjQ76AIFscg.woff)\n        format('woff');\n  }\n\n  /* cyrillic-ext */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Light Italic'), local('IBMPlexSans-LightItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmvIRce_fuJGl18QRY.woff2)\n        format('woff2');\n    unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F,\n      U+FE2E-FE2F;\n  }\n  /* cyrillic */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Light Italic'), local('IBMPlexSans-LightItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmvIRccvfuJGl18QRY.woff2)\n        format('woff2');\n    unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n  }\n  /* greek */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Light Italic'), local('IBMPlexSans-LightItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmvIRcdffuJGl18QRY.woff2)\n        format('woff2');\n    unicode-range: U+0370-03FF;\n  }\n  /* vietnamese */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Light Italic'), local('IBMPlexSans-LightItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmvIRceffuJGl18QRY.woff2)\n        format('woff2');\n    unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;\n  }\n  /* latin-ext */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Light Italic'), local('IBMPlexSans-LightItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmvIRcePfuJGl18QRY.woff2)\n        format('woff2');\n    unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB,\n      U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n  }\n  /* latin */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Light Italic'), local('IBMPlexSans-LightItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmvIRcdvfuJGl18Q.woff2)\n        format('woff2');\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA,\n      U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212,\n      U+2215, U+FEFF, U+FFFD;\n  }\n  /* cyrillic-ext */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Italic'), local('IBMPlexSans-Italic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX-KVElMYYaJe8bpLHnCwDKhdTuGqZJW9XjDlN8.woff2)\n        format('woff2');\n    unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F,\n      U+FE2E-FE2F;\n  }\n  /* cyrillic */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Italic'), local('IBMPlexSans-Italic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX-KVElMYYaJe8bpLHnCwDKhdTuE6ZJW9XjDlN8.woff2)\n        format('woff2');\n    unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n  }\n  /* greek */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Italic'), local('IBMPlexSans-Italic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX-KVElMYYaJe8bpLHnCwDKhdTuFKZJW9XjDlN8.woff2)\n        format('woff2');\n    unicode-range: U+0370-03FF;\n  }\n  /* vietnamese */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Italic'), local('IBMPlexSans-Italic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX-KVElMYYaJe8bpLHnCwDKhdTuGKZJW9XjDlN8.woff2)\n        format('woff2');\n    unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;\n  }\n  /* latin-ext */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Italic'), local('IBMPlexSans-Italic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX-KVElMYYaJe8bpLHnCwDKhdTuGaZJW9XjDlN8.woff2)\n        format('woff2');\n    unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB,\n      U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n  }\n  /* latin */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Italic'), local('IBMPlexSans-Italic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX-KVElMYYaJe8bpLHnCwDKhdTuF6ZJW9XjDg.woff2)\n        format('woff2');\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA,\n      U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212,\n      U+2215, U+FEFF, U+FFFD;\n  }\n  /* cyrillic-ext */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans SemiBold Italic'),\n      local('IBMPlexSans-SemiBoldItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmyIJce_fuJGl18QRY.woff2)\n        format('woff2');\n    unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F,\n      U+FE2E-FE2F;\n  }\n  /* cyrillic */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans SemiBold Italic'),\n      local('IBMPlexSans-SemiBoldItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmyIJccvfuJGl18QRY.woff2)\n        format('woff2');\n    unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n  }\n  /* greek */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans SemiBold Italic'),\n      local('IBMPlexSans-SemiBoldItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmyIJcdffuJGl18QRY.woff2)\n        format('woff2');\n    unicode-range: U+0370-03FF;\n  }\n  /* vietnamese */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans SemiBold Italic'),\n      local('IBMPlexSans-SemiBoldItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmyIJceffuJGl18QRY.woff2)\n        format('woff2');\n    unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;\n  }\n  /* latin-ext */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans SemiBold Italic'),\n      local('IBMPlexSans-SemiBoldItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmyIJcePfuJGl18QRY.woff2)\n        format('woff2');\n    unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB,\n      U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n  }\n  /* latin */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans SemiBold Italic'),\n      local('IBMPlexSans-SemiBoldItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmyIJcdvfuJGl18Q.woff2)\n        format('woff2');\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA,\n      U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212,\n      U+2215, U+FEFF, U+FFFD;\n  }\n  /* cyrillic-ext */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Light'), local('IBMPlexSans-Light'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjXr8AIxsdP3pBmtF8A.woff2)\n        format('woff2');\n    unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F,\n      U+FE2E-FE2F;\n  }\n  /* cyrillic */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Light'), local('IBMPlexSans-Light'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjXr8AIVsdP3pBmtF8A.woff2)\n        format('woff2');\n    unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n  }\n  /* greek */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Light'), local('IBMPlexSans-Light'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjXr8AIJsdP3pBmtF8A.woff2)\n        format('woff2');\n    unicode-range: U+0370-03FF;\n  }\n  /* vietnamese */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Light'), local('IBMPlexSans-Light'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjXr8AI5sdP3pBmtF8A.woff2)\n        format('woff2');\n    unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;\n  }\n  /* latin-ext */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Light'), local('IBMPlexSans-Light'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjXr8AI9sdP3pBmtF8A.woff2)\n        format('woff2');\n    unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB,\n      U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n  }\n  /* latin */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Light'), local('IBMPlexSans-Light'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjXr8AIFsdP3pBms.woff2)\n        format('woff2');\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA,\n      U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212,\n      U+2215, U+FEFF, U+FFFD;\n  }\n  /* cyrillic-ext */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans'), local('IBMPlexSans'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYXgKVElMYYaJe8bpLHnCwDKhdzeFaxOedfTDw.woff2)\n        format('woff2');\n    unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F,\n      U+FE2E-FE2F;\n  }\n  /* cyrillic */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans'), local('IBMPlexSans'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYXgKVElMYYaJe8bpLHnCwDKhdXeFaxOedfTDw.woff2)\n        format('woff2');\n    unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n  }\n  /* greek */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans'), local('IBMPlexSans'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYXgKVElMYYaJe8bpLHnCwDKhdLeFaxOedfTDw.woff2)\n        format('woff2');\n    unicode-range: U+0370-03FF;\n  }\n  /* vietnamese */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans'), local('IBMPlexSans'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYXgKVElMYYaJe8bpLHnCwDKhd7eFaxOedfTDw.woff2)\n        format('woff2');\n    unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;\n  }\n  /* latin-ext */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans'), local('IBMPlexSans'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYXgKVElMYYaJe8bpLHnCwDKhd_eFaxOedfTDw.woff2)\n        format('woff2');\n    unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB,\n      U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n  }\n  /* latin */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans'), local('IBMPlexSans'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYXgKVElMYYaJe8bpLHnCwDKhdHeFaxOedc.woff2)\n        format('woff2');\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA,\n      U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212,\n      U+2215, U+FEFF, U+FFFD;\n  }\n  /* cyrillic-ext */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans SemiBold'), local('IBMPlexSans-SemiBold'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjQ76AIxsdP3pBmtF8A.woff2)\n        format('woff2');\n    unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F,\n      U+FE2E-FE2F;\n  }\n  /* cyrillic */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans SemiBold'), local('IBMPlexSans-SemiBold'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjQ76AIVsdP3pBmtF8A.woff2)\n        format('woff2');\n    unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n  }\n  /* greek */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans SemiBold'), local('IBMPlexSans-SemiBold'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjQ76AIJsdP3pBmtF8A.woff2)\n        format('woff2');\n    unicode-range: U+0370-03FF;\n  }\n  /* vietnamese */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans SemiBold'), local('IBMPlexSans-SemiBold'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjQ76AI5sdP3pBmtF8A.woff2)\n        format('woff2');\n    unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;\n  }\n  /* latin-ext */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans SemiBold'), local('IBMPlexSans-SemiBold'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjQ76AI9sdP3pBmtF8A.woff2)\n        format('woff2');\n    unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB,\n      U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n  }\n  /* latin */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans SemiBold'), local('IBMPlexSans-SemiBold'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjQ76AIFsdP3pBms.woff2)\n        format('woff2');\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA,\n      U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212,\n      U+2215, U+FEFF, U+FFFD;\n  }\n}\n","//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n/// Defines how font files are loaded and displayed by the browser\n/// @link https://css-tricks.com/almanac/properties/f/font-display/\n/// @access public\n/// @group @carbon/type\n$carbon--font-display: auto !default;\n","//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import 'prefix';\n@import 'styles';\n@import 'font-family';\n\n/// Create type classes for font families, weights, styles\n/// @access public\n/// @group @carbon/type\n@mixin carbon--type-classes {\n  // Font families\n  @each $name, $value in $carbon--font-families {\n    .#{$prefix}--type-#{$name} {\n      font-family: $value;\n    }\n  }\n\n  // Font weights\n  @each $name, $value in $carbon--font-weights {\n    .#{$prefix}--type-#{$name} {\n      font-weight: $value;\n    }\n  }\n\n  // Font styles\n  .#{$prefix}--type-italic {\n    font-style: italic;\n  }\n\n  // Type styles\n  @each $name, $value in $tokens {\n    .#{$prefix}--type-#{$name} {\n      @include carbon--type-style($name, map-has-key($value, breakpoints));\n    }\n  }\n}\n","//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import '@carbon/layout/scss/breakpoint';\n@import 'scale';\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$caption-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(16px),\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$label-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(16px),\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$helper-text-01: (\n  font-size: carbon--type-scale(1),\n  font-style: italic,\n  line-height: carbon--rem(16px),\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(18px),\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(20px),\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(22px),\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(24px),\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(16px),\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-02: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(20px),\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: carbon--rem(18px),\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: carbon--rem(22px),\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(26px),\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(36px),\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(40px),\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 130%,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(5),\n      line-height: 125%,\n    ),\n    max: (\n      font-size: carbon--type-scale(6),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 129%,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 125%,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 125%,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 122%,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 119%,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 117%,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 125%,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 122%,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 119%,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 117%,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-paragraph-01: (\n  font-size: carbon--type-scale(6),\n  font-weight: carbon--font-weight('light'),\n  line-height: 125%,\n  letter-spacing: 0,\n  breakpoints: (\n    lg: (\n      font-size: carbon--type-scale(7),\n      line-height: 129%,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 125%,\n    ),\n  ),\n);\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-01: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 130%,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(5),\n    ),\n    lg: (\n      font-size: carbon--type-scale(6),\n      line-height: 125%,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 129%,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 125%,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-02: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  line-height: 125%,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 122%,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 119%,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 117%,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-01: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 119%,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 117%,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 113%,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-02: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 119%,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 116%,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 113%,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-03: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 119%,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 115%,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 111%,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 107%,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 105%,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-04: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 119%,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 115%,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 111%,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 107%,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 105%,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$tokens: (\n  caption-01: $caption-01,\n  label-01: $label-01,\n  helper-text-01: $helper-text-01,\n  body-short-01: $body-short-01,\n  body-short-02: $body-short-02,\n  body-long-01: $body-long-01,\n  body-long-02: $body-long-02,\n  code-01: $code-01,\n  code-02: $code-02,\n  heading-01: $heading-01,\n  heading-02: $heading-02,\n  productive-heading-03: $productive-heading-03,\n  productive-heading-04: $productive-heading-04,\n  productive-heading-05: $productive-heading-05,\n  expressive-paragraph-01: $expressive-paragraph-01,\n  expressive-heading-03: $expressive-heading-03,\n  expressive-heading-04: $expressive-heading-04,\n  expressive-heading-05: $expressive-heading-05,\n  expressive-heading-06: $expressive-heading-06,\n  quotation-01: $quotation-01,\n  quotation-02: $quotation-02,\n  display-01: $display-01,\n  display-02: $display-02,\n  display-03: $display-03,\n  display-04: $display-04,\n);\n\n/// @param {Map} $map\n/// @access public\n/// @group @carbon/type\n@mixin properties($map) {\n  @each $name, $value in $map {\n    #{$name}: $value;\n  }\n}\n\n/// @param {Number} $value - Number with units\n/// @return {Number} Without units\n/// @access public\n/// @group @carbon/type\n@function strip-unit($value) {\n  @return $value / ($value * 0 + 1);\n}\n\n/// This helper includes fluid type styles for the given token value. Fluid type\n/// means that the `font-size` is computed using `calc()` in order to be\n/// determined by the screen size instead of a breakpoint. As a result, fluid\n/// styles should be used with caution in fixed width contexts.\n///\n/// In addition, we make use of %-based line-heights so that the line-height of\n/// each type style is computed correctly due to the dynamic nature of the\n/// `font-size`.\n///\n/// Most of the logic for this work comes from CSS Tricks:\n/// https://css-tricks.com/snippets/css/fluid-typography/\n///\n/// @param {Map} $type-styles - The value of a given type token\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\n  // Include the initial styles for the given token by default without any\n  // media query guard. This includes `font-size` as a fallback in the case\n  // that a browser does not support `calc()`\n  @include properties(map-remove($type-styles, breakpoints));\n  // We also need to include the `sm` styles by default since they don't\n  // appear in the fluid styles for tokens\n  @include fluid-type-size($type-styles, sm, $breakpoints);\n\n  // Finally, we need to go through all the breakpoints defined in the type\n  // token and apply the properties and fluid type size for that given\n  // breakpoint\n  @each $name, $values in map-get($type-styles, breakpoints) {\n    @include carbon--breakpoint($name) {\n      @include properties($values);\n      @include fluid-type-size($type-styles, $name, $breakpoints);\n    }\n  }\n}\n\n/// Computes the fluid `font-size` for a given type style and breakpoint\n/// @param {Map} $type-styles - The styles for a given token\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type-size(\n  $type-styles,\n  $name,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  // Get the information about the breakpoint we're currently working in. Useful\n  // for getting initial width information\n  $breakpoint: map-get($breakpoints, $name);\n\n  // Our fluid styles are captured under the 'breakpoints' property in our type\n  // styles map. These define what values to treat as `max-` variables below\n  $fluid-sizes: map-get($type-styles, breakpoints);\n  $fluid-breakpoint: ();\n  // Special case for `sm` because the styles for small are on the type style\n  // directly\n  @if $name == sm {\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\n  } @else {\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\n  }\n\n  // Initialize our font-sizes to the default size for the type style\n  $max-font-size: map-get($type-styles, font-size);\n  $min-font-size: map-get($type-styles, font-size);\n  @if map-has-key($fluid-breakpoint, font-size) {\n    $min-font-size: map-get($fluid-breakpoint, font-size);\n  }\n\n  // Initialize our min and max width to the width of the current breakpoint\n  $max-vw: map-get($breakpoint, width);\n  $min-vw: map-get($breakpoint, width);\n\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\n  // use to update `max-font-size` and `max-vw` with larger values\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\n  $next-fluid-breakpoint-name: null;\n\n  // We need to figure out what the next available fluid breakpoint is for our\n  // given $type-styles. In this loop we try and iterate through breakpoints\n  // until we either manually set $next-breakpoint-available to null or\n  // `breakpoint-next` returns null.\n  @while $next-breakpoint-available {\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\n      $next-breakpoint-available: null;\n    } @else {\n      $next-breakpoint-available: carbon--breakpoint-next(\n        $next-breakpoint-available,\n        $breakpoints\n      );\n    }\n  }\n\n  // If we have found the next available fluid breakpoint name, then we know\n  // that we have values that we can use to set max-font-size and max-vw as both\n  // values derive from the next breakpoint\n  @if $next-fluid-breakpoint-name {\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\n    $max-font-size: map-get(\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\n      font-size\n    );\n    $max-vw: map-get($next-fluid-breakpoint, width);\n\n    // prettier-ignore\n    font-size: calc(#{$min-font-size} +\n      #{strip-unit($max-font-size - $min-font-size)} *\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\n    );\n  } @else {\n    // Otherwise, just default to setting the font size found from the type\n    // style or the given fluid breakpoint in the type style\n    font-size: $min-font-size;\n  }\n}\n\n/// Helper mixin to include the styles for a given token in any selector in your\n/// project. Also includes an optional fluid option that will enable fluid\n/// styles for the token if they are defined. Fluid styles will cause the\n/// token's font-size to be computed based on the viewport size. As a result, use\n/// with caution in fixed contexts.\n/// @param {String} $name - The name of the token to get the styles for\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\n/// @access public\n/// @group @carbon/type\n@mixin carbon--type-style(\n  $name,\n  $fluid: false,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  @if not map-has-key($tokens, $name) {\n    @error 'Unable to find a token with the name: `#{$name}`';\n  }\n\n  $token: map-get($tokens, $name);\n\n  // If $fluid is set to true and the token has breakpoints defined for fluid\n  // styles, delegate to the fluid-type helper for the given token\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\n    @include fluid-type($token, $breakpoints);\n  } @else {\n    // Otherwise, we just include all the property declarations directly on the\n    // selector\n    @include properties(map-remove($token, 'breakpoints'));\n  }\n}\n","//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n// https://github.com/twbs/bootstrap/blob/v4-dev/scss/mixins/_breakpoints.scss\n@import 'convert';\n@import 'utilities';\n\n/// Carbon gutter size in rem\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--grid-gutter: carbon--rem(32px);\n\n/// Carbon condensed gutter size in rem\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--grid-gutter--condensed: carbon--rem(2px);\n\n// Initial map of our breakpoints and their values\n/// @type Map\n/// @access public\n/// @group @carbon/layout\n$carbon--grid-breakpoints: (\n  sm: (\n    columns: 4,\n    margin: 0,\n    width: carbon--rem(320px),\n  ),\n  md: (\n    columns: 8,\n    margin: carbon--rem(16px),\n    width: carbon--rem(672px),\n  ),\n  lg: (\n    columns: 16,\n    margin: carbon--rem(16px),\n    width: carbon--rem(1056px),\n  ),\n  xlg: (\n    columns: 16,\n    margin: carbon--rem(16px),\n    width: carbon--rem(1312px),\n  ),\n  max: (\n    columns: 16,\n    margin: carbon--rem(16px),\n    width: carbon--rem(1584px),\n  ),\n) !default;\n\n/// Get the value of the next breakpoint, or null for the last breakpoint\n/// @param {String} $name - The name of the brekapoint\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - A map of breakpoints where the key is the name of the breakpoint and the value is the values for the breakpoint\n/// @param {List} $breakpoint-names [map-keys($breakpoints)] - A list of names from the `$breakpoints` map\n/// @return {String}\n/// @access public\n/// @group @carbon/layout\n@function carbon--breakpoint-next(\n  $name,\n  $breakpoints: $carbon--grid-breakpoints,\n  $breakpoint-names: map-keys($breakpoints)\n) {\n  $n: index($breakpoint-names, $name);\n  @if $n != null and $n < length($breakpoint-names) {\n    @return nth($breakpoint-names, $n + 1);\n  }\n  @return null;\n}\n\n/// Get the value of the previous breakpoint, or null for the first breakpoint\n/// @param {String} $name - The name of the brekapoint\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - A map of breakpoints where the key is the name of the breakpoint and the value is the values for the breakpoint\n/// @param {List} $breakpoint-names [map-keys($breakpoints)] - A list of names from the `$breakpoints` map\n/// @return {String}\n/// @access public\n/// @group @carbon/layout\n@function carbon--breakpoint-prev(\n  $name,\n  $breakpoints: $carbon--grid-breakpoints,\n  $breakpoint-names: map-keys($breakpoints)\n) {\n  $n: index($breakpoint-names, $name);\n  @if $n != null and $n > 1 {\n    @return nth($breakpoint-names, $n - 1);\n  }\n  @return null;\n}\n\n/// Check to see if the given breakpoint name\n/// @param {String} $name - The name of the brekapoint\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - A map of breakpoints where the key is the name of the breakpoint and the value is the values for the breakpoint\n/// @return {Bool}\n/// @access public\n/// @group @carbon/layout\n@function carbon--is-smallest-breakpoint(\n  $name,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  @return index(map-keys($breakpoints), $name) == 1;\n}\n\n/// Returns the largest breakpoint name\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - A map of breakpoints where the key is the name\n/// @return {String}\n/// @access public\n/// @group @carbon/layout\n@function carbon--largest-breakpoint-name(\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  $total-breakpoints: length($breakpoints);\n  @return carbon--key-by-index($breakpoints, $total-breakpoints);\n}\n\n/// Get the infix for a given breakpoint in a list of breakpoints. Usesful for generate the size part in a selector, for example: `.prefix--col-sm-2`.\n/// @param {String} $name - The name of the breakpoint\n/// @return {String}\n/// @access public\n/// @group @carbon/layout\n@function carbon--breakpoint-infix($name) {\n  @return '-#{$name}';\n}\n\n/// Generate a media query up to the width of the given breakpoint name\n/// @param {String | Number} $name\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - A map of breakpoints where the key is the name\n/// @content\n/// @access public\n/// @group @carbon/layout\n@mixin carbon--breakpoint-up($name, $breakpoints: $carbon--grid-breakpoints) {\n  @if type-of($name) == 'number' {\n    @media (min-width: $name) {\n      @content;\n    }\n  } @else if map-has-key($breakpoints, $name) {\n    $breakpoint: map-get($breakpoints, $name);\n    $width: map-get($breakpoint, width);\n    @if carbon--is-smallest-breakpoint($name, $breakpoints) {\n      @content;\n    } @else {\n      @media (min-width: $width) {\n        @content;\n      }\n    }\n  } @else {\n    @error 'Unable to find a breakpoint with name `#{$name}`. Expected one of: (#{map-keys($breakpoints)})';\n  }\n}\n\n/// Generate a media query for the maximum width of the given styles\n/// @param {String | Number} $name\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - A map of breakpoints where the key is the name\n/// @content\n/// @access public\n/// @group @carbon/layout\n@mixin carbon--breakpoint-down($name, $breakpoints: $carbon--grid-breakpoints) {\n  @if type-of($name) == 'number' {\n    @media (max-width: $name) {\n      @content;\n    }\n  } @else if map-has-key($breakpoints, $name) {\n    $breakpoint: map-get($breakpoints, $name);\n    $width: map-get($breakpoint, width);\n    @if carbon--is-smallest-breakpoint($name, $breakpoints) {\n      @content;\n    } @else {\n      @media (max-width: $width) {\n        @content;\n      }\n    }\n  } @else {\n    @error 'Unable to find a breakpoint with name `#{$name}`. Expected one of: (#{map-keys($breakpoints)})';\n  }\n}\n\n/// Generate a media query for the range between the lower and upper breakpoints\n/// @param {String | Number} $lower\n/// @param {String | Number} $upper\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - A map of breakpoints where the key is the name\n/// @content\n/// @access public\n/// @group @carbon/layout\n@mixin carbon--breakpoint-between(\n  $lower,\n  $upper,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  $is-number-lower: type-of($lower) == 'number';\n  $is-number-upper: type-of($upper) == 'number';\n  $min: if($is-number-lower, $lower, map-get($breakpoints, $lower));\n  $max: if($is-number-upper, $upper, map-get($breakpoints, $upper));\n\n  @if $min and $max {\n    $min-width: if(not $is-number-lower and $min, map-get($min, width), $min);\n    $max-width: if(not $is-number-upper and $max, map-get($max, width), $max);\n    @media (min-width: $min-width) and (max-width: $max-width) {\n      @content;\n    }\n  } @else if $min != null and $max == null {\n    @include carbon--breakpoint-up($lower) {\n      @content;\n    }\n  } @else if $min == null and $max != null {\n    @include carbon--breakpoint-down($upper) {\n      @content;\n    }\n  } @else {\n    @error 'Unable to find a breakpoint to satisfy: (#{$lower},#{$upper}). Expected both to be one of (#{map-keys($breakpoints)}).';\n  }\n}\n\n/// Generate media query for the largest breakpoint\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - A map of breakpoints where the key is the name\n/// @content\n/// @access public\n/// @group @carbon/layout\n@mixin carbon--largest-breakpoint($breakpoints: $carbon--grid-breakpoints) {\n  @include carbon--breakpoint(carbon--largest-breakpoint-name()) {\n    @content;\n  }\n}\n\n/// Generate a media query for a given breakpoint\n/// @param {String | Number} $name\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - A map of breakpoints where the key is the name\n/// @content\n/// @access public\n/// @group @carbon/layout\n@mixin carbon--breakpoint($name, $breakpoints: $carbon--grid-breakpoints) {\n  @include carbon--breakpoint-up($name, $breakpoints) {\n    @content;\n  }\n}\n","//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import '../layout/convert';\n@import 'font-family';\n\n/// Include a type reset that individuals can use in their projects for\n/// consistent rendering\n@mixin carbon--type-reset() {\n  html {\n    font-size: $carbon--base-font-size;\n  }\n\n  body {\n    @include carbon--font-family('sans');\n    @include carbon--font-weight('regular');\n\n    text-rendering: optimizeLegibility;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  strong {\n    font-weight: 600;\n  }\n}\n","//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n/// Font family fallbacks for: IBM Plex Mono, IBM Plex Sans, IBM Plex Sans\n/// Condensed, IBM Plex Sans Hebrew, and IBM Plex Serif\n/// @type {Map}\n$carbon--font-families: (\n  'mono': unquote(\"'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace\"),\n  'sans': unquote(\"'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif\"),\n  'sans-condensed': unquote(\"'IBM Plex Sans Condensed', 'Helvetica Neue', Arial, sans-serif\"),\n  'sans-hebrew': unquote(\"'IBM Plex Sans Hebrew', 'Helvetica Hebrew', 'Arial Hebrew', sans-serif\"),\n  'serif': unquote(\"'IBM Plex Serif', 'Georgia', Times, serif\"),\n);\n\n/// Get the font-family for an IBM Plex font.\n/// @param {String} $name\n/// @return {String}\n@function carbon--font-family($name) {\n  @return map-get($carbon--font-families, $name);\n}\n\n/// Include the `font-family` definition for the given name in your selector.\n/// @param {String} $name\n@mixin carbon--font-family($name) {\n  font-family: carbon--font-family($name);\n}\n\n/// Suggested font weights to be used in product.\n$carbon--font-weights: (\n  'light': 300,\n  'regular': 400,\n  'semibold': 600,\n);\n\n/// Retrieve the font-weight value for a given name\n/// @param {String} $weight\n/// @return {Number}\n@function carbon--font-weight($weight) {\n  @return map-get($carbon--font-weights, $weight);\n}\n\n/// Set the `font-weight` property with the value for a given name\n/// @param {String} $weight\n@mixin carbon--font-weight($weight) {\n  font-weight: carbon--font-weight($weight);\n}\n","//\n// Copyright IBM Corp. 2016, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import 'functions';\n@import './vendor/@carbon/elements/scss/import-once/import-once';\n@import './vendor/@carbon/elements/scss/type/reset';\n\n/// Resets default browser styling\n/// @access public\n@mixin reset {\n  @if global-variable-exists(css--reset) ==false or $css--reset==false {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font-family: inherit;\n    vertical-align: baseline;\n\n    & > *,\n    & > *:before,\n    & > *:after {\n      box-sizing: inherit;\n    }\n  }\n}\n\n@include exports('css--reset') {\n  @if global-variable-exists(css--reset) ==false or $css--reset==true {\n    @if feature-flag-enabled('components-x') {\n      @include carbon--type-reset;\n    }\n\n    // http://cssreset.com/scripts/eric-meyer-reset-css/\n    html,\n    body,\n    div,\n    span,\n    applet,\n    object,\n    iframe,\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6,\n    p,\n    blockquote,\n    pre,\n    a,\n    abbr,\n    acronym,\n    address,\n    big,\n    cite,\n    code,\n    del,\n    dfn,\n    em,\n    img,\n    ins,\n    kbd,\n    q,\n    s,\n    samp,\n    small,\n    strike,\n    strong,\n    sub,\n    sup,\n    tt,\n    var,\n    b,\n    u,\n    i,\n    center,\n    dl,\n    dt,\n    dd,\n    ol,\n    ul,\n    li,\n    fieldset,\n    form,\n    label,\n    legend,\n    table,\n    caption,\n    tbody,\n    tfoot,\n    thead,\n    tr,\n    th,\n    td,\n    article,\n    aside,\n    canvas,\n    details,\n    embed,\n    figure,\n    figcaption,\n    footer,\n    header,\n    hgroup,\n    menu,\n    nav,\n    output,\n    ruby,\n    section,\n    summary,\n    time,\n    mark,\n    audio,\n    video {\n      margin: 0;\n      padding: 0;\n      border: 0;\n      font-size: 100%;\n      font: inherit;\n      vertical-align: baseline;\n    }\n\n    // Chrome 62 fix\n    button,\n    input[type='button'],\n    input[type='submit'],\n    input[type='reset'],\n    input[type='file'],\n    input[type='text'],\n    input[type='password'],\n    textarea {\n      border-radius: 0;\n    }\n\n    input[type='text']::-ms-clear {\n      display: none;\n    }\n\n    /* HTML5 display-role reset for older browsers */\n    article,\n    aside,\n    details,\n    figcaption,\n    figure,\n    footer,\n    header,\n    hgroup,\n    menu,\n    nav,\n    section {\n      display: block;\n    }\n\n    body {\n      line-height: 1;\n    }\n\n    sup {\n      vertical-align: super;\n    }\n\n    sub {\n      vertical-align: sub;\n    }\n\n    ol,\n    ul {\n      list-style: none;\n    }\n\n    blockquote,\n    q {\n      quotes: none;\n    }\n\n    blockquote:before,\n    blockquote:after,\n    q:before,\n    q:after {\n      content: '';\n      content: none;\n    }\n\n    table {\n      border-collapse: collapse;\n      border-spacing: 0;\n    }\n\n    * {\n      box-sizing: border-box;\n    }\n  }\n}\n","//\n// Copyright IBM Corp. 2016, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n//----------------------------------------------\n// Mixins\n// ---------------------------------------------\n//\n//   Category             ||  Description\n//   ===========================================\n//   Misc                 ||  General helper @mixins\n//   Deprecated           ||  Not used anymore\n//   ===========================================\n\n//----------------------------------------------\n// Misc\n// ---------------------------------------------\n\n@import 'vars';\n@import 'css--reset';\n@import 'typography';\n@import 'deprecate';\n@import 'functions';\n@import './vendor/@carbon/elements/scss/import-once/import-once';\n\n/// Adds text overflow styling\n/// @access public\n/// @param {Value} $width [false] - value of width if you want to set width, else nothing\n/// @example @include text-overflow(300px);\n@mixin text-overflow($width: false) {\n  display: block;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n\n  // apply a width if width parameter exists\n  @if ($width) {\n    width: $width;\n  }\n}\n\n/// Adds placeholder text color\n/// @access public\n/// @example @include placeholder-colors;\n@mixin placeholder-colors {\n  color: $text-03;\n}\n\n/// Adds small or large box shadow\n/// @access public\n/// @param {String} $size ['small'] - size of box shadow\n/// @example @include box-shadow(); @include box-shadow('large');\n@mixin box-shadow($size: 'small') {\n  // Large - For dropdowns\n  @if ($size == 'large') {\n    box-shadow: 6px 6px 6px 0 $box-shadow;\n  }\n\n  @if ($size == 'small') {\n    box-shadow: 0px 3px 3px 0 $box-shadow;\n  }\n}\n\n/// Adds outline styles depending on specific type\n/// @access public\n/// @param {String} $type ['border'] - type of outline from: border, blurred, outline, invalid, reset\n/// @example @include focus-outline('outline');\n@mixin focus-outline($type: 'border') {\n  @if ($type == 'border') {\n    outline: 1px solid if(not feature-flag-enabled('components-x'), $brand-01, $focus);\n  }\n\n  @if ($type == 'blurred') {\n    box-shadow: 0 0 0 3px $focus;\n    outline: 1px solid transparent;\n  }\n\n  @if ($type == 'outline') {\n    outline: 2px solid if(not feature-flag-enabled('components-x'), $brand-01, $focus);\n    outline-offset: -2px;\n  }\n\n  @if ($type == 'invalid') {\n    outline: 2px solid $support-01;\n    outline-offset: -2px;\n  }\n\n  @if ($type == 'reset') {\n    outline: 2px solid transparent;\n    outline-offset: -2px;\n  }\n}\n\n/// Adds rotational transformation\n/// @access public\n/// @param {Value} $deg - how many degrees to rotate\n/// @param {Value} $speed - speed of rotation\n/// @param {Value} $origin [center] - transform-origin\n/// @example @include rotate(90deg, 300ms);\n@mixin rotate($deg, $speed, $origin: center) {\n  transform: rotate($deg);\n  transition: transform $speed;\n  transform-origin: $origin;\n}\n\n/// Adds styles to hide content\n/// @access public\n@mixin hidden {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n  visibility: visible;\n  white-space: nowrap;\n}\n\n/// Resets button styles\n/// @access public\n/// @param {Bool} $width [true] - sets width to 100% if true\n/// @example @include button-reset($width: false);\n@mixin button-reset($width: true) {\n  @include reset;\n  @if not feature-flag-enabled('components-x') {\n    @include font-family;\n    @include font-smoothing;\n    @include letter-spacing;\n  }\n  display: inline-block;\n  background: none;\n  appearance: none;\n  border: 0;\n  padding: 0;\n  cursor: pointer;\n\n  @if ($width == true) {\n    width: 100%;\n  }\n\n  &::-moz-focus-inner {\n    border: 0;\n  }\n}\n\n/// 💀 Skeleton loading animation\n/// @access public\n/// @example @include skeleton;\n@mixin skeleton {\n  position: relative;\n  border: none;\n  padding: 0;\n  box-shadow: none;\n  pointer-events: none;\n  background: $skeleton;\n\n  &:hover,\n  &:focus,\n  &:active {\n    border: none;\n    outline: none;\n    cursor: default;\n  }\n\n  &:before {\n    content: '';\n    width: 0%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    opacity: 0.3;\n    background: $skeleton;\n    animation: 3000ms ease-in-out skeleton infinite;\n  }\n}\n\n@include exports('skeleton') {\n  @keyframes skeleton {\n    0% {\n      width: 0%;\n      left: 0;\n      right: auto;\n      opacity: 0.3;\n    }\n    20% {\n      width: 100%;\n      left: 0;\n      right: auto;\n      opacity: 1;\n    }\n    28% {\n      width: 100%;\n      left: auto;\n      right: 0;\n    }\n    51% {\n      width: 0%;\n      left: auto;\n      right: 0;\n    }\n    58% {\n      width: 0%;\n      left: auto;\n      right: 0;\n    }\n    82% {\n      width: 100%;\n      left: auto;\n      right: 0;\n    }\n    83% {\n      width: 100%;\n      left: 0;\n      right: auto;\n    }\n    96% {\n      width: 0%;\n      left: 0;\n      right: auto;\n    }\n    100% {\n      width: 0%;\n      left: 0;\n      right: auto;\n      opacity: 0.3;\n    }\n  }\n}\n\n/// @access public\n/// @deprecated A legacy class used for our older way of dark/light theme switch\n@mixin light-ui {\n  @include deprecate('`@include light-ui` has been removed.', feature-flag-enabled('breaking-changes-x'), true) {\n    .#{$prefix}--global-light-ui & {\n      @content;\n    }\n  }\n}\n","//\n// Copyright IBM Corp. 2016, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import '../../globals/scss/vars';\n@import '../../globals/scss/typography';\n@import '../../globals/scss/helper-mixins';\n@import '../../globals/scss/vendor/@carbon/elements/scss/import-once/import-once';\n@import 'mixins';\n@import '../../globals/scss/css--reset';\n\n@mixin button {\n  // <button> elements cannot be used as flex containers\n  button.#{$prefix}--btn {\n    display: inline-block;\n  }\n\n  // Reset intrisic padding in Firefox (see #731)\n  button.#{$prefix}--btn::-moz-focus-inner {\n    padding: 0;\n    border: 0;\n  }\n\n  // Vertically center icon inside <button>\n  button.#{$prefix}--btn .#{$prefix}--btn__icon {\n    position: relative;\n    vertical-align: middle;\n    top: -1px;\n\n    // Targets IE10+ browsers: Reset <svg> position for vertical centering\n    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n      top: 0;\n    }\n  }\n\n  .#{$prefix}--btn {\n    @include button-base;\n  }\n\n  .#{$prefix}--btn--primary {\n    @include button-theme($brand-01, transparent, $inverse-01, $hover-primary, $ui-01);\n  }\n\n  .#{$prefix}--btn--secondary {\n    @include button-theme(transparent, $brand-01, $brand-01, $hover-secondary, $brand-01);\n\n    &:hover,\n    &:focus {\n      color: $inverse-01;\n    }\n\n    &:active {\n      color: $brand-01;\n    }\n\n    &:hover > .#{$prefix}--btn__icon,\n    &:focus > .#{$prefix}--btn__icon {\n      fill: $inverse-01;\n    }\n\n    &:hover:disabled,\n    &:focus:disabled {\n      color: $brand-01;\n    }\n  }\n\n  .#{$prefix}--btn--tertiary {\n    @include button-theme(transparent, $ui-05, $ui-05, $ui-05, $ui-05);\n\n    &:hover,\n    &:focus {\n      color: $inverse-01;\n    }\n\n    &:active {\n      color: $ui-05;\n    }\n\n    &:hover:disabled,\n    &:focus:disabled {\n      color: $ui-05;\n    }\n\n    &:hover > .#{$prefix}--btn__icon,\n    &:focus > .#{$prefix}--btn__icon {\n      fill: $inverse-01;\n    }\n  }\n\n  .#{$prefix}--btn--ghost {\n    @include button-theme(transparent, transparent, $brand-01, $brand-01, $brand-01);\n\n    &:hover,\n    &:focus {\n      color: $inverse-01;\n\n      .#{$prefix}--btn__icon {\n        fill: $inverse-01;\n      }\n    }\n\n    &:active {\n      color: $ui-05;\n    }\n\n    .#{$prefix}--btn__icon {\n      margin-left: $spacing-xs;\n    }\n\n    &:hover:disabled,\n    &:focus:disabled {\n      color: $brand-01;\n\n      .#{$prefix}--btn__icon {\n        fill: $brand-01;\n      }\n    }\n  }\n\n  .#{$prefix}--btn--danger {\n    @include button-theme(transparent, $support-01, $support-01, $support-01, $support-01);\n\n    &:hover {\n      color: $inverse-01;\n      border: $button-border-width solid transparent;\n    }\n\n    &:focus {\n      color: $inverse-01;\n    }\n\n    &:active {\n      color: $support-01;\n    }\n\n    &:hover:disabled,\n    &:focus:disabled {\n      color: $support-01;\n      border: $button-border-width solid $support-01;\n    }\n\n    &:hover > .#{$prefix}--btn__icon,\n    &:focus > .#{$prefix}--btn__icon {\n      fill: $inverse-01;\n    }\n  }\n\n  .#{$prefix}--btn--danger--primary {\n    @include button-theme($support-01, transparent, $inverse-01, darken($support-01, 10%), $ui-01);\n\n    &:hover:disabled,\n    &:focus:disabled {\n      color: $ui-01;\n      border: $button-border-width solid $support-01;\n    }\n  }\n\n  .#{$prefix}--btn--sm {\n    @include letter-spacing;\n    height: 2rem;\n    padding: $button-padding-sm;\n  }\n\n  .#{$prefix}--btn--secondary + .#{$prefix}--btn--primary,\n  .#{$prefix}--btn--tertiary + .#{$prefix}--btn--danger--primary {\n    margin-left: $spacing-md;\n  }\n\n  // Skeleton State\n  .#{$prefix}--btn.#{$prefix}--skeleton {\n    @include skeleton;\n    width: rem(150px);\n  }\n}\n\n@mixin button--x {\n  // button set styles\n  .#{$prefix}--btn-set {\n    display: flex;\n  }\n\n  .#{$prefix}--btn-set > .#{$prefix}--btn {\n    max-width: rem(196px); // taken from design kit\n    width: 100%;\n  }\n\n  .#{$prefix}--btn--secondary.#{$prefix}--btn--disabled + .#{$prefix}--btn--primary.#{$prefix}--btn--disabled,\n  .#{$prefix}--btn--tertiary.#{$prefix}--btn--disabled + .#{$prefix}--btn--danger.#{$prefix}--btn--disabled {\n    border-left: rem(1px) solid $disabled-03;\n  }\n\n  .#{$prefix}--btn {\n    @include button-base--x;\n\n    &.#{$prefix}--btn--disabled > .#{$prefix}--btn__icon,\n    &:disabled > .#{$prefix}--btn__icon {\n      fill: $ui-04;\n    }\n  }\n\n  // Reset intrisic padding in Firefox (see #731)\n  .#{$prefix}--btn::-moz-focus-inner {\n    padding: 0;\n    border: 0;\n  }\n\n  .#{$prefix}--btn--primary {\n    @include button-theme--x($interactive-01, transparent, $text-04, $hover-primary, $text-04, $active-primary);\n\n    &:hover {\n      color: $text-04;\n    }\n  }\n\n  .#{$prefix}--btn--secondary {\n    @include button-theme--x($interactive-02, transparent, $text-04, $hover-secondary, $text-04, $active-secondary);\n\n    &:hover,\n    &:focus {\n      color: $inverse-01;\n    }\n  }\n\n  .#{$prefix}--btn--tertiary {\n    @include button-theme--x(transparent, $interactive-03, $interactive-03, $hover-tertiary, $interactive-03, $active-tertiary);\n\n    &:hover {\n      color: $inverse-01;\n    }\n\n    &:disabled,\n    &:hover:disabled,\n    &:focus:disabled,\n    &.#{$prefix}--btn--disabled,\n    &.#{$prefix}--btn--disabled:hover,\n    &.#{$prefix}--btn--disabled:focus {\n      background: transparent;\n      color: $disabled;\n\n      & > .#{$prefix}--btn__icon {\n        fill: $disabled;\n      }\n    }\n\n    &:hover > .#{$prefix}--btn__icon {\n      fill: $inverse-01;\n    }\n  }\n\n  .#{$prefix}--btn--ghost {\n    @include button-theme--x(transparent, transparent, $interactive-04, $hover-ui, $interactive-04, $active-ui);\n    padding: rem(14px) rem(16px);\n\n    .#{$prefix}--btn__icon {\n      position: static;\n      margin-left: $carbon--spacing-03;\n    }\n\n    &:hover,\n    &:active {\n      color: $ibm-color__blue-70;\n\n      .#{$prefix}--btn__icon {\n        fill: $ibm-color__blue-70;\n      }\n    }\n\n    &:active {\n      background-color: $active-ui;\n    }\n\n    &:disabled,\n    &:hover:disabled,\n    &:focus:disabled,\n    &.#{$prefix}--btn--disabled,\n    &.#{$prefix}--btn--disabled:hover,\n    &.#{$prefix}--btn--disabled:focus {\n      color: $disabled;\n      background: transparent;\n      border-color: transparent;\n\n      .#{$prefix}--btn__icon {\n        fill: $disabled;\n      }\n    }\n\n    &.#{$prefix}--btn--sm {\n      padding: 0.375rem 1rem;\n    }\n  }\n\n  .#{$prefix}--btn--danger {\n    @include button-theme--x($support-01, $support-01, $text-04, $hover-danger, $icon-03, $active-danger);\n\n    &:hover {\n      color: $text-04;\n      border: $button-border-width solid transparent;\n    }\n  }\n\n  .#{$prefix}--btn--sm {\n    min-height: rem(32px);\n    padding: $button-padding-sm;\n  }\n\n  // Skeleton State\n  .#{$prefix}--btn.#{$prefix}--skeleton {\n    @include skeleton;\n    width: rem(150px);\n  }\n}\n\n@include exports('button') {\n  @if feature-flag-enabled('components-x') {\n    @include button--x;\n  } @else {\n    @include button;\n  }\n}\n","//\n// Copyright IBM Corp. 2016, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import 'vars';\n@import 'deprecate';\n@import 'functions';\n\n/// @access public\n/// @deprecated (For v10) Use `$carbon--font-families`\n/// @group typography\n/// @returns font-family types\n$font-family-mono: 'ibm-plex-mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace !default;\n/// @deprecated (For v10) Use `$carbon--font-families`\n$font-family-sans-serif: 'ibm-plex-sans', Helvetica Neue, Arial, sans-serif !default;\n/// @deprecated (For v10) Use `$carbon--font-families`\n$font-family-serif: 'ibm-plex-serif', 'Georgia', Times, serif !default;\n/// @deprecated (For v10) Use Plex fonts\n$font-family-helvetica: 'IBM Helvetica', Helvetica Neue, HelveticaNeue, Helvetica, sans-serif !default;\n\n/// @access public\n/// @group typography\n/// @returns 16px font size\n/// @deprecated (For v10) Superseded by `$carbon--base-font-size`\n$base-font-size: 16px !default; // Default, Use with em() and rem() functions\n\n/// @access public\n/// @deprecated (For v10) Superseded by `$carbon--base-font-size`\n/// @type Map\n/// @group typography\n/// @returns different type sizes in rem\n$typescale-map: (\n  'giga': 4.75rem,\n  'mega': 3.375rem,\n  'alpha': 2.25rem,\n  'beta': 1.75rem,\n  'gamma': 1.25rem,\n  'delta': 1.125rem,\n  'epsilon': 1rem,\n  'zeta': 0.875rem,\n  'omega': 0.75rem,\n  'caption': 0.75rem,\n  'legal': 0.6875rem,\n  'p': 1rem,\n);\n\n/// @access public\n/// @deprecated (For v10) Use `@include carbon--type-scale()`\n/// @group typography\n/// @param {String} $size - value of type size\n/// @returns type size in rem from typescale-map\n@mixin typescale($size) {\n  @include deprecate(\n    '`@include typescale()` has been removed. ' + 'Use `@include carbon--type-scale()` instead.',\n    feature-flag-enabled('breaking-changes-x'),\n    true\n  ) {\n    @if map-has-key($typescale-map, $size) {\n      font-size: map-get($typescale-map, $size);\n    } @else {\n      @warn 'This is not a step of the Carbon Type Scale!';\n    }\n  }\n}\n\n/// @access public\n/// @param {Value} $px - value of type in pixels\n/// @returns type size converted to rem\n/// @example - rem(48px);\n/// @deprecated (For v10) Use `carbon--rem()`\n@function rem($px) {\n  @return ($px / $base-font-size) * 1rem;\n}\n\n/// @access public\n/// @param {Value} $px - value of type in pixels\n/// @returns type size converted to em\n/// @example - em(48px);\n/// @deprecated (For v10) Use `carbon--em()`\n@function em($px) {\n  @return ($px / $base-font-size) * 1em;\n}\n\n/// @access public\n/// @returns helvetica font family\n/// @group typography\n/// @example - @include helvetica;\n/// @deprecated (For v10) Use Plex fonts\n@mixin helvetica {\n  @include deprecate(\n    '`@include helvetica` has been removed. ' + 'Use `@include carbon--font-family()` instead.',\n    feature-flag-enabled('breaking-changes-x'),\n    true\n  ) {\n    font-family: $font-family-helvetica;\n  }\n}\n\n/// @access public\n/// @deprecated (For v10) Use `@include carbon--font-family()`\n/// @returns uses sans-serif font type if $css--plex is true, else uses helvetica\n/// @group typography\n/// @example - @include font-family;\n@mixin font-family {\n  @include deprecate(\n    '`@include font-family` has been removed. ' + 'Use `@include carbon--font-family()` instead.',\n    feature-flag-enabled('breaking-changes-x'),\n    true\n  ) {\n    @if global-variable-exists('css--plex') and $css--plex == true {\n      font-family: $font-family-sans-serif;\n    } @else {\n      font-family: $font-family-helvetica;\n    }\n  }\n}\n\n/// There are two line heights to choose from. One for headings and one for body text\n/// @access public\n/// @param {String} $el - 'heading' or 'body'\n/// @example @include line-height('heading');\n/// @deprecated (For v10) Use `@include carbon--type-style()`\n@mixin line-height($el) {\n  @include deprecate(\n    '`@include line-height()` has been removed. ' + 'Use `@include carbon--type-style()` instead.',\n    feature-flag-enabled('breaking-changes-x'),\n    true\n  ) {\n    @if $el == 'heading' {\n      line-height: 1.25;\n    } @else if $el == 'body' {\n      line-height: 1.5;\n    } @else {\n      @warn 'Invalid argument used for @mixin line-height($el) . Please use 'heading' or 'body'.';\n    }\n  }\n}\n\n/// @access public\n/// @require bold-text Only applied to bold weight text\n/// @deprecated (For v10) The new type styles doesn't use this\n@mixin font-smoothing {\n  @include deprecate('`@include font-smoothing` has been removed.', feature-flag-enabled('breaking-changes-x'), true) {\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n}\n\n/// @access public\n/// @deprecated (For v10) The new type styles doesn't use this\n@mixin letter-spacing {\n  @include deprecate('`@include letter-spacing` has been removed.', feature-flag-enabled('breaking-changes-x'), true) {\n    letter-spacing: 0;\n  }\n}\n\n/// @access public\n/// @type Map\n/// @returns mapped out pixel equivalent in rem\n/// @deprecated (For v10) Superseded by `$carbon--type-scale`\n$font-size-map: (\n  '76': 4.75rem,\n  '54': 3.375rem,\n  '36': 2.25rem,\n  '28': 1.75rem,\n  '20': 1.25rem,\n  '18': 1.125rem,\n  '16': 1rem,\n  '14': 0.875rem,\n  '12': 0.75rem,\n  '11': 0.6875rem,\n);\n\n/// @access public\n/// @deprecated (For v10) Use `@include carbon--type-scale()`\n/// @param {String} $size value from $font-size-map\n/// @returns font size in rem from $font-size-map\n/// @require $font-size-map\n/// @example @include font-size('76');\n@mixin font-size($size) {\n  @include deprecate(\n    '`@include font-size()` has been removed. ' + 'Use `@include carbon--type-scale()` instead.',\n    feature-flag-enabled('breaking-changes-x'),\n    true\n  ) {\n    @if map-has-key($font-size-map, $size) {\n      font-size: map-get($font-size-map, $size);\n    } @else {\n      @warn 'This is not a step of the Carbon Type Scale! Valid sizes are 11, 12, 14, 16, 18, 20, 28, 36, 54, and 76';\n    }\n  }\n}\n\n// 🔬 Experimental\n@import '../../globals/scss/vendor/@carbon/elements/scss/type/styles';\n\n/// @access public\n/// @returns different type styles per token.\n/// @see $tokens Map in src/globals/scss/vendor/@carbon/type/scss/_styles.scss\n/// @param {String} $name - the name of the token to get the styles for\n/// @param {Boolean} $fluid [false] - specify whether to include fluid styles\n/// @example -  @include type-style('body-short-01');\n@mixin type-style($name, $fluid: false) {\n  @include carbon--type-style($name, $fluid);\n}\n","// Code generated by @carbon/themes. DO NOT EDIT.\n//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n/// Carbon's white color theme\n/// @type Map\n/// @access public\n/// @group @carbon/themes\n$carbon--theme--white: (\n  interactive-01: #0062ff,\n  interactive-02: #171717,\n  interactive-03: #0062ff,\n  interactive-04: #0062ff,\n  ui-background: #ffffff,\n  ui-01: #f3f3f3,\n  ui-02: #ffffff,\n  ui-03: #dcdcdc,\n  ui-04: #8c8c8c,\n  ui-05: #171717,\n  text-01: #171717,\n  text-02: #565656,\n  text-03: #8c8c8c,\n  text-04: #ffffff,\n  icon-01: #171717,\n  icon-02: #565656,\n  icon-03: #ffffff,\n  link-01: #0062ff,\n  field-01: #f3f3f3,\n  field-02: #ffffff,\n  inverse-01: #ffffff,\n  inverse-02: #3d3d3d,\n  support-01: #da1e28,\n  support-02: #24a148,\n  support-03: #fdd13a,\n  support-04: #054ada,\n  overlay-01: rgba(23, 23, 23, 0.5),\n  focus: #0062ff,\n  hover-primary: #0353e9,\n  active-primary: #0530ad,\n  hover-primary-text: #054ada,\n  hover-secondary: #4c4c4c,\n  active-secondary: #6f6f6f,\n  hover-tertiary: #0353e9,\n  active-tertiary: #0530ad,\n  hover-ui: #e5e5e5,\n  active-ui: #bebebe,\n  selected-ui: #dcdcdc,\n  hover-selected-ui: #cacaca,\n  hover-danger: #ba1b23,\n  active-danger: #750e13,\n  hover-row: #e5e5e5,\n  visited-link: #8a3ffc,\n  disabled-01: #f3f3f3,\n  disabled-02: #bebebe,\n  disabled-03: #8c8c8c,\n  highlight: #c9deff,\n  brand-01: #0062ff,\n  brand-02: #171717,\n  brand-03: #0062ff,\n  active-01: #bebebe,\n  hover-field: #e5e5e5,\n) !default;\n\n/// Carbon's g10 color theme\n/// @type Map\n/// @access public\n/// @group @carbon/themes\n$carbon--theme--g10: (\n  interactive-01: #0062ff,\n  interactive-02: #171717,\n  interactive-03: #0062ff,\n  interactive-04: #0062ff,\n  ui-background: #f3f3f3,\n  ui-01: #ffffff,\n  ui-02: #f3f3f3,\n  ui-03: #dcdcdc,\n  ui-04: #8c8c8c,\n  ui-05: #171717,\n  text-01: #171717,\n  text-02: #565656,\n  text-03: #8c8c8c,\n  text-04: #ffffff,\n  icon-01: #171717,\n  icon-02: #565656,\n  icon-03: #ffffff,\n  link-01: #0062ff,\n  field-01: #ffffff,\n  field-02: #f3f3f3,\n  inverse-01: #ffffff,\n  inverse-02: #3d3d3d,\n  support-01: #da1e28,\n  support-02: #24a148,\n  support-03: #fdd13a,\n  support-04: #054ada,\n  overlay-01: rgba(23, 23, 23, 0.5),\n  focus: #0062ff,\n  hover-primary: #0353e9,\n  active-primary: #0530ad,\n  hover-primary-text: #054ada,\n  hover-secondary: #4c4c4c,\n  active-secondary: #6f6f6f,\n  hover-tertiary: #0353e9,\n  active-tertiary: #0530ad,\n  hover-ui: #e5e5e5,\n  active-ui: #bebebe,\n  selected-ui: #dcdcdc,\n  hover-selected-ui: #cacaca,\n  hover-danger: #ba1b23,\n  active-danger: #750e13,\n  hover-row: #e5e5e5,\n  visited-link: #8a3ffc,\n  disabled-01: #ffffff,\n  disabled-02: #bebebe,\n  disabled-03: #8c8c8c,\n  highlight: #c9deff,\n  brand-01: #0062ff,\n  brand-02: #171717,\n  brand-03: #0062ff,\n  active-01: #bebebe,\n  hover-field: #e5e5e5,\n) !default;\n\n/// Carbon's g90 color theme\n/// @type Map\n/// @access public\n/// @group @carbon/themes\n$carbon--theme--g90: (\n  interactive-01: #0062ff,\n  interactive-02: #6f6f6f,\n  interactive-03: #ffffff,\n  interactive-04: #408bfc,\n  ui-background: #282828,\n  ui-01: #3d3d3d,\n  ui-02: #565656,\n  ui-03: #565656,\n  ui-04: #8c8c8c,\n  ui-05: #f3f3f3,\n  text-01: #f3f3f3,\n  text-02: #bebebe,\n  text-03: #8c8c8c,\n  text-04: #ffffff,\n  icon-01: #f3f3f3,\n  icon-02: #bebebe,\n  icon-03: #ffffff,\n  link-01: #6ea6ff,\n  field-01: #3d3d3d,\n  field-02: #565656,\n  inverse-01: #171717,\n  inverse-02: #f3f3f3,\n  support-01: #fb4b53,\n  support-02: #3dbb61,\n  support-03: #fdd13a,\n  support-04: #408bfc,\n  overlay-01: rgba(23, 23, 23, 0.7),\n  focus: #ffffff,\n  hover-primary: #0353e9,\n  active-primary: #0530ad,\n  hover-primary-text: #054ada,\n  hover-secondary: #606060,\n  active-secondary: #3d3d3d,\n  hover-tertiary: #f3f3f3,\n  active-tertiary: #bebebe,\n  hover-ui: #353535,\n  active-ui: #6f6f6f,\n  selected-ui: #565656,\n  hover-selected-ui: #656565,\n  hover-danger: #ba1b23,\n  active-danger: #750e13,\n  hover-row: #4c4c4c,\n  visited-link: #bb8eff,\n  disabled-01: #3d3d3d,\n  disabled-02: #565656,\n  disabled-03: #8c8c8c,\n  highlight: #061f80,\n  brand-01: #0062ff,\n  brand-02: #6f6f6f,\n  brand-03: #ffffff,\n  active-01: #6f6f6f,\n  hover-field: #353535,\n) !default;\n\n/// Carbon's g100 color theme\n/// @type Map\n/// @access public\n/// @group @carbon/themes\n$carbon--theme--g100: (\n  interactive-01: #0062ff,\n  interactive-02: #6f6f6f,\n  interactive-03: #ffffff,\n  interactive-04: #408bfc,\n  ui-background: #171717,\n  ui-01: #282828,\n  ui-02: #3d3d3d,\n  ui-03: #3d3d3d,\n  ui-04: #6f6f6f,\n  ui-05: #f3f3f3,\n  text-01: #f3f3f3,\n  text-02: #bebebe,\n  text-03: #6f6f6f,\n  text-04: #ffffff,\n  icon-01: #f3f3f3,\n  icon-02: #bebebe,\n  icon-03: #ffffff,\n  link-01: #6ea6ff,\n  field-01: #282828,\n  field-02: #3d3d3d,\n  inverse-01: #171717,\n  inverse-02: #f3f3f3,\n  support-01: #fb4b53,\n  support-02: #3dbb61,\n  support-03: #fdd13a,\n  support-04: #408bfc,\n  overlay-01: rgba(23, 23, 23, 0.7),\n  focus: #ffffff,\n  hover-primary: #0353e9,\n  active-primary: #0530ad,\n  hover-primary-text: #054ada,\n  hover-secondary: #606060,\n  active-secondary: #3d3d3d,\n  hover-tertiary: #f3f3f3,\n  active-tertiary: #bebebe,\n  hover-ui: #353535,\n  active-ui: #565656,\n  selected-ui: #3d3d3d,\n  hover-selected-ui: #4c4c4c,\n  hover-danger: #ba1b23,\n  active-danger: #750e13,\n  hover-row: #353535,\n  visited-link: #bb8eff,\n  disabled-01: #282828,\n  disabled-02: #3d3d3d,\n  disabled-03: #6f6f6f,\n  highlight: #061f80,\n  brand-01: #0062ff,\n  brand-02: #6f6f6f,\n  brand-03: #ffffff,\n  active-01: #565656,\n  hover-field: #353535,\n) !default;\n\n/// Carbon's default theme\n/// @type Map\n/// @access public\n/// @alias carbon--theme--white\n/// @group @carbon/themes\n$carbon--theme: $carbon--theme--white !default;\n","//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import '../layout/breakpoint';\n@import 'font-family';\n@import 'scale';\n\n$caption-01: (\n  font-family: carbon--font-family('sans'),\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(16px),\n  letter-spacing: 0.32px,\n) !default;\n\n$label-01: (\n  font-family: carbon--font-family('sans'),\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(16px),\n  letter-spacing: 0.32px,\n) !default;\n\n$helper-text-01: (\n  font-family: carbon--font-family('sans'),\n  font-size: carbon--type-scale(1),\n  font-style: italic,\n  line-height: carbon--rem(16px),\n  letter-spacing: 0.32px,\n) !default;\n\n$body-short-01: (\n  font-family: carbon--font-family('sans'),\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(18px),\n  letter-spacing: 0.16px,\n) !default;\n\n$body-long-01: (\n  font-family: carbon--font-family('sans'),\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(20px),\n  letter-spacing: 0.16px,\n) !default;\n\n$body-short-02: (\n  font-family: carbon--font-family('sans'),\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(22px),\n  letter-spacing: 0,\n) !default;\n\n$body-long-02: (\n  font-family: carbon--font-family('sans'),\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(24px),\n  letter-spacing: 0,\n) !default;\n\n$code-01: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(16px),\n  letter-spacing: 0.32px,\n) !default;\n\n$code-02: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(20px),\n  letter-spacing: 0.32px,\n) !default;\n\n$heading-01: (\n  font-family: carbon--font-family('sans'),\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: carbon--rem(18px),\n  letter-spacing: 0.16px,\n) !default;\n\n$heading-02: (\n  font-family: carbon--font-family('sans'),\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: carbon--rem(22px),\n  letter-spacing: 0,\n) !default;\n\n$productive-heading-03: (\n  font-family: carbon--font-family('sans'),\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(26px),\n  letter-spacing: 0,\n) !default;\n\n$productive-heading-04: (\n  font-family: carbon--font-family('sans'),\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(36px),\n  letter-spacing: 0,\n) !default;\n\n$productive-heading-05: (\n  font-family: carbon--font-family('sans'),\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(40px),\n  letter-spacing: 0,\n) !default;\n\n$expressive-heading-03: (\n  font-family: carbon--font-family('sans'),\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 130%,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(5),\n      line-height: 125%,\n    ),\n    max: (\n      font-size: carbon--type-scale(6),\n    ),\n  ),\n) !default;\n\n$expressive-heading-04: (\n  font-family: carbon--font-family('sans'),\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 129%,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 125%,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n    ),\n  ),\n) !default;\n\n$expressive-heading-05: (\n  font-family: carbon--font-family('sans'),\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 125%,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 122%,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 119%,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 117%,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n$expressive-heading-06: (\n  font-family: carbon--font-family('sans'),\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 125%,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 122%,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 119%,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 117%,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n$expressive-paragraph-01: (\n  font-family: carbon--font-family('sans'),\n  font-size: carbon--type-scale(6),\n  font-weight: carbon--font-weight('light'),\n  line-height: 125%,\n  letter-spacing: 0,\n  breakpoints: (\n    lg: (\n      font-size: carbon--type-scale(7),\n      line-height: 129%,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 125%,\n    ),\n  ),\n);\n\n$quotation-01: (\n  font-family: carbon--font-family('serif'),\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 130%,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(5),\n    ),\n    lg: (\n      font-size: carbon--type-scale(6),\n      line-height: 125%,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 129%,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 125%,\n    ),\n  ),\n) !default;\n\n$quotation-02: (\n  font-family: carbon--font-family('serif'),\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  line-height: 125%,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 122%,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 119%,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 117%,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n$display-01: (\n  font-family: carbon--font-family('sans'),\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 119%,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 117%,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 113%,\n    ),\n  ),\n) !default;\n\n$display-02: (\n  font-family: carbon--font-family('sans'),\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 119%,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 116%,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 113%,\n    ),\n  ),\n) !default;\n\n$display-03: (\n  font-family: carbon--font-family('sans'),\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 119%,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 115%,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 111%,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 107%,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 105%,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n$display-04: (\n  font-family: carbon--font-family('sans'),\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 119%,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 115%,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 111%,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 107%,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 105%,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n// prettier-ignore\n$tokens: (\n  // Universal tokens\n  caption-01: $caption-01,\n  label-01: $label-01,\n\n  helper-text-01: $helper-text-01,\n\n  body-short-01: $body-short-01,\n  body-short-02: $body-short-02,\n\n  body-long-01: $body-long-01,\n  body-long-02: $body-long-02,\n\n  code-01: $code-01,\n  code-02: $code-02,\n\n  heading-01: $heading-01,\n  heading-02: $heading-02,\n\n  // Product layout, fixed\n  productive-heading-03: $productive-heading-03,\n  productive-heading-04: $productive-heading-04,\n  productive-heading-05: $productive-heading-05,\n\n  // Editorial layout, fluid\n  expressive-paragraph-01: $expressive-paragraph-01,\n  expressive-heading-03: $expressive-heading-03,\n  expressive-heading-04: $expressive-heading-04,\n  expressive-heading-05: $expressive-heading-05,\n  expressive-heading-06: $expressive-heading-06,\n\n  quotation-01: $quotation-01,\n  quotation-02: $quotation-02,\n\n  display-01: $display-01,\n  display-02: $display-02,\n  display-03: $display-03,\n  display-04: $display-04,\n);\n\n@mixin properties($map) {\n  @each $name, $value in $map {\n    #{$name}: $value;\n  }\n}\n\n@function strip-unit($value) {\n  @return $value / ($value * 0 + 1);\n}\n\n/// This helper includes fluid type styles for the given token value. Fluid type\n/// means that the `font-size` is computed using `calc()` in order to be\n/// determined by the screen size instead of a breakpoint. As a result, fluid\n/// styles should be used with caution in fixed width contexts.\n///\n/// In addition, we make use of %-based line-heights so that the line-height of\n/// each type style is computed correctly due to the dynamic nature of the\n/// `font-size`.\n///\n/// Most of the logic for this work comes from CSS Tricks:\n/// https://css-tricks.com/snippets/css/fluid-typography/\n///\n/// @param {Map} $type-styles - the value of a given type token\n/// @param {?Map} $breakpoints - custom breakpoints to use\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\n  // Include the initial styles for the given token by default without any\n  // media query guard. This includes `font-size` as a fallback in the case\n  // that a browser does not support `calc()`\n  @include properties(map-remove($type-styles, breakpoints));\n  // We also need to include the `sm` styles by default since they don't\n  // appear in the fluid styles for tokens\n  @include fluid-type-size($type-styles, sm, $breakpoints);\n\n  // Finally, we need to go through all the breakpoints defined in the type\n  // token and apply the properties and fluid type size for that given\n  // breakpoint\n  @each $name, $values in map-get($type-styles, breakpoints) {\n    @include carbon--breakpoint($name) {\n      @include properties($values);\n      @include fluid-type-size($type-styles, $name, $breakpoints);\n    }\n  }\n}\n\n/// Computes the fluid `font-size` for a given type style and breakpoint\n/// @param {Map} $type-styles - the styles for a given token\n/// @param {String} $name - the name of the breakpoint to which we apply the fluid\n/// styles\n/// @param {?Map} $breakpoints - the breakpoints for the grid system\n@mixin fluid-type-size($type-styles, $name, $breakpoints: $carbon--grid-breakpoints) {\n  // Get the information about the breakpoint we're currently working in. Useful\n  // for getting initial width information\n  $breakpoint: map-get($breakpoints, $name);\n\n  // Our fluid styles are captured under the 'breakpoints' property in our type\n  // styles map. These define what values to treat as `max-` variables below\n  $fluid-sizes: map-get($type-styles, breakpoints);\n  $fluid-breakpoint: ();\n  // Special case for `sm` because the styles for small are on the type style\n  // directly\n  @if $name == sm {\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\n  } @else {\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\n  }\n\n  // Initialize our font-sizes to the default size for the type style\n  $max-font-size: map-get($type-styles, font-size);\n  $min-font-size: map-get($type-styles, font-size);\n  @if map-has-key($fluid-breakpoint, font-size) {\n    $min-font-size: map-get($fluid-breakpoint, font-size);\n  }\n\n  // Initialize our min and max width to the width of the current breakpoint\n  $max-vw: map-get($breakpoint, width);\n  $min-vw: map-get($breakpoint, width);\n\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\n  // use to update `max-font-size` and `max-vw` with larger values\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\n  $next-fluid-breakpoint-name: null;\n\n  // We need to figure out what the next available fluid breakpoint is for our\n  // given $type-styles. In this loop we try and iterate through breakpoints\n  // until we either manually set $next-breakpoint-available to null or\n  // `breakpoint-next` returns null.\n  @while $next-breakpoint-available {\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\n      $next-breakpoint-available: null;\n    } @else {\n      $next-breakpoint-available: carbon--breakpoint-next($next-breakpoint-available, $breakpoints);\n    }\n  }\n\n  // If we have found the next available fluid breakpoint name, then we know\n  // that we have values that we can use to set max-font-size and max-vw as both\n  // values derive from the next breakpoint\n  @if $next-fluid-breakpoint-name {\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\n    $max-font-size: map-get(map-get($fluid-sizes, $next-fluid-breakpoint-name), font-size);\n    $max-vw: map-get($next-fluid-breakpoint, width);\n\n    // prettier-ignore\n    font-size: calc(#{$min-font-size} +\n      #{strip-unit($max-font-size - $min-font-size)} *\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\n    );\n  } @else {\n    // Otherwise, just default to setting the font size found from the type\n    // style or the given fluid breakpoint in the type style\n    font-size: $min-font-size;\n  }\n}\n\n/// Helper mixin to include the styles for a given token in any selector in your\n/// project. Also includes an optional fluid option that will enable fluid\n/// styles for the token if they are defined. Fluid styles will cause the\n/// token's font-size to be computed based on the viewport size. As a result, use\n/// with caution in fixed contexts.\n/// @param {String} $name - the name of the token to get the styles for\n/// @param {?Boolean} $fluid - specify whether to include fluid styles for the\n/// @param {?Map} $breakpoints - provide a custom breakpoint map to use\n/// token\n@mixin carbon--type-style($name, $fluid: false, $breakpoints: $carbon--grid-breakpoints) {\n  @if not map-has-key($tokens, $name) {\n    @error 'Unable to find a token with the name: `#{$name}`';\n  }\n\n  $token: map-get($tokens, $name);\n\n  // If $fluid is set to true and the token has breakpoints defined for fluid\n  // styles, delegate to the fluid-type helper for the given token\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\n    @include fluid-type($token, $breakpoints);\n  } @else {\n    // Otherwise, we just include all the property declarations directly on the\n    // selector\n    @include properties(map-remove($token, 'breakpoints'));\n  }\n}\n","//\n// Copyright IBM Corp. 2016, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import '../../globals/scss/typography';\n\n@mixin button-base {\n  @include reset;\n  @include font-family;\n  @include font-smoothing;\n  @include letter-spacing;\n  cursor: pointer;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n  font-size: $button-font-size;\n  font-weight: $button-font-weight;\n  min-height: rem($button-height);\n  padding: $button-padding;\n  border-radius: $button-border-radius;\n  text-align: center;\n  text-decoration: none;\n  transition-duration: $transition--base;\n  transition-timing-function: ease-in;\n  white-space: nowrap;\n  line-height: 16px;\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.5;\n  }\n\n  .#{$prefix}--btn__icon {\n    width: rem(16px);\n    height: rem(16px);\n    margin-left: 0.5rem;\n    transition-duration: $transition--base;\n    transition-timing-function: ease-in;\n  }\n}\n\n@mixin button-theme($bg-color, $border-color, $font-color, $hover-bg-color, $icon-color) {\n  background-color: $bg-color;\n  border-width: $button-border-width;\n  border-style: solid;\n  border-color: $border-color;\n  color: $font-color;\n\n  &:focus,\n  &:hover {\n    background-color: $hover-bg-color;\n  }\n\n  &:focus {\n    border: $button-border-width solid $ui-02;\n    outline: $button-border-width solid $hover-bg-color;\n  }\n\n  &:disabled:hover,\n  &:disabled:focus {\n    background-color: $bg-color;\n  }\n\n  &:active {\n    background-color: darken($bg-color, 20%);\n  }\n\n  .#{$prefix}--btn__icon {\n    fill: $icon-color;\n  }\n}\n\n@mixin button-base--x {\n  @include reset;\n  @include type-style('body-short-01');\n\n  cursor: pointer;\n  display: inline-flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-shrink: 0;\n  min-height: rem($button-height);\n  padding: $button-padding;\n  border-radius: $button-border-radius;\n  text-align: left;\n  text-decoration: none;\n  transition: $duration--fast-01 motion(entrance, productive);\n  outline: $button-outline-width solid transparent;\n  position: relative;\n  max-width: rem(320px);\n\n  &:disabled,\n  &.#{$prefix}--btn--disabled {\n    cursor: not-allowed;\n    color: $ui-04;\n    background: $ibm-color__gray-30;\n    border-color: $ibm-color__gray-30;\n  }\n\n  .#{$prefix}--btn__icon {\n    position: absolute;\n    right: rem(16px);\n    flex-shrink: 0;\n    width: rem(16px);\n    height: rem(16px);\n    transition: $duration--fast-01 motion(entrance, productive);\n  }\n}\n\n@mixin button-theme--x($bg-color, $border-color, $font-color, $hover-bg-color, $icon-color, $active-color) {\n  background-color: $bg-color;\n  border-width: $button-border-width;\n  border-style: solid;\n  border-color: $border-color;\n  color: $font-color;\n\n  &:hover {\n    background-color: $hover-bg-color;\n  }\n\n  &::before,\n  &::after {\n    box-sizing: border-box;\n    position: absolute;\n    content: '';\n    transition: $duration--fast-01 motion(entrance, productive);\n  }\n\n  &:not(.#{$prefix}--btn--disabled)::before {\n    top: calc(-#{$button-border-width} + #{$button-outline-width});\n    left: -$button-border-width + $button-outline-width;\n    width: calc(100% + (2 * #{$button-border-width}) - (2 * #{$button-outline-width}));\n    height: calc(100% + (2 * #{$button-border-width}) - (2 * #{$button-outline-width}));\n    border: 1px solid transparent;\n  }\n\n  &:focus::before {\n    border-color: $ui-02;\n  }\n\n  &:not(.#{$prefix}--btn--disabled)::after {\n    top: -#{$button-border-width};\n    left: -#{$button-border-width};\n    height: calc(100% + 2 * #{$button-border-width});\n    width: calc(100% + 2 * #{$button-border-width});\n    border: $button-outline-width solid transparent;\n  }\n\n  &:focus::after {\n    border-color: $focus;\n  }\n\n  &:disabled:hover,\n  &:disabled:focus,\n  &:hover.#{$prefix}--btn--disabled,\n  &:focus.#{$prefix}--btn--disabled {\n    color: $ui-04;\n    background: $ibm-color__gray-30;\n    border-color: $ibm-color__gray-30;\n    text-decoration: none;\n  }\n\n  &:active {\n    background-color: $active-color;\n  }\n\n  .#{$prefix}--btn__icon {\n    fill: $icon-color;\n  }\n}\n","//\n// Copyright IBM Corp. 2016, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import 'feature-flags';\n@import './vendor/@carbon/elements/scss/import-once/import-once';\n@import 'functions';\n@import 'colors';\n@import 'spacing';\n\n/// @access private\n$carbon--theme--v9: (\n  brand-01: $color__blue-51,\n  brand-02: $color__blue-40,\n  brand-03: $color__teal-20,\n  inverse-01: $color__white,\n  inverse-02: #272d33,\n  ui-01: $color__white,\n  ui-02: #f4f7fb,\n  ui-03: $color__gray-1,\n  ui-04: #8897a2,\n  ui-05: $color__navy-gray-6,\n  text-01: $color__blue-90,\n  text-02: $color__navy-gray-6,\n  text-03: #cdd1d4,\n  field-01: #f4f7fb,\n  field-02: $color__white,\n  support-01: #e0182d,\n  support-02: $color__green-40,\n  support-03: $color__yellow-30,\n  support-04: $color__blue-30,\n  nav-01: $color__navy-gray-1,\n  nav-02: $color__blue-90,\n  nav-03: $color__purple-30,\n  nav-04: $color__purple-60,\n  nav-05: $color__teal-40,\n  nav-06: $color__teal-50,\n  nav-07: $color__blue-30,\n  nav-08: $color__blue-51,\n  hover-primary: darken($color__blue-51, 10%),\n  hover-primary-text: darken($color__blue-51, 15%),\n  hover-danger: darken(#e0182d, 10%),\n  hover-secondary: $color__blue-51,\n  hover-row: rgba($color__blue-40, 0.1),\n);\n\n@if not feature-flag-enabled('components-x') {\n  /// @access public\n  $carbon--theme: $carbon--theme--v9 !global;\n}\n\n@import './vendor/@carbon/elements/scss/themes/themes';\n\n@mixin theme() {\n  // Nav\n  /// @access public\n  $nav-01: $color__navy-gray-1 !default !global;\n  $nav-02: $color__blue-90 !default !global;\n  $nav-03: $color__purple-30 !default !global;\n  $nav-04: $color__purple-60 !default !global;\n  $nav-05: $color__teal-40 !default !global;\n  $nav-06: $color__teal-50 !default !global;\n  $nav-07: $color__blue-30 !default !global;\n  $nav-08: $color__blue-51 !default !global;\n\n  // Global\n  /// @access public\n  $input-border: 1px solid transparent !default !global;\n  $input-label-weight: 600 !default !global;\n  $focus: $color__blue-20 !default !global;\n\n  // Button Theme Variables\n  /// @access public\n  $button-font-weight: 600 !default !global;\n  $button-font-size: 0.875rem !default !global;\n  $button-border-radius: 0 !default !global;\n  $button-height: 40px !default !global;\n  $button-padding: 0 $spacing-md !default !global;\n  $button-padding-sm: 0 $spacing-xs !default !global;\n  $button-border-width: 2px !default !global;\n  $button-outline-width: 1px !default !global;\n\n  // Accordion (Reverse)\n  /// @access public\n  $accordion-flex-direction: row !default !global;\n  $accordion-justify-content: flex-start !default !global;\n  $accordion-arrow-margin: 0 0 0 $spacing-2xs !default !global;\n  $accordion-title-margin: 0 0 0 $spacing-md !default !global;\n  $accordion-content-padding: 0 $spacing-md 0 $spacing-2xl !default !global;\n\n  // Card\n  /// @access public\n  $card-text-align: center !default !global;\n  $card-flex-align: center !default !global;\n\n  // Checkbox\n  /// @access public\n  $checkbox-border-width: 2px !default !global;\n\n  // Code Snippet\n  /// @access public\n  $snippet-background-color: $ui-01 !default !global;\n  $snippet-border-color: $ui-03 !default !global;\n\n  // Content Switcher\n  /// @access public\n  $content-switcher-border-radius: 8px !default !global;\n  $content-switcher-option-border: 1px solid $brand-01 !default !global;\n\n  // Data Table\n  /// @access public\n  $data-table-heading-transform: uppercase !default !global;\n  $data-table-heading-border-bottom: 1px solid $brand-01 !default !global;\n  $data-table-row-height: 2rem !default !global;\n\n  // Modal\n  /// @access public\n  $modal-border-top: $brand-01 4px solid !default !global;\n  $modal-footer-background-color: $ui-02 !default !global;\n\n  // Progress Indicator\n  /// @access public\n  $progress-indicator-bar-width: 1px inset transparent !default !global;\n  $progress-indicator-stroke-width: 5 !default !global;\n  $progress-indicator-line-offset: 0.625rem !default !global;\n\n  // Radio Button\n  /// @access public\n  $radio-border-width: 2px !default !global;\n\n  // Structured Theme Variables\n  /// @access public\n  $structured-list-padding: 2rem !default !global;\n  $structured-list-text-transform: none !default !global;\n\n  // Skeleton Loading\n  /// @access public\n  $skeleton: rgba($color__blue-51, 0.1) !default !global; //old $field-01\n}\n\n// Light Experimental Theme\n@mixin theme--experimental() {\n  /// @access public\n  $edited: true !default !global;\n  $use-layer: true !default !global;\n\n  // Global\n  /// @access public\n  $input-border: 1px solid transparent !default !global;\n  $input-label-weight: 400 !default !global;\n  $disabled: $disabled-02 !default !global;\n  $disabled-background-color: $disabled-01 !default !global;\n  $focus: $ibm-color__blue-60 !default !global;\n\n  // Link\n  /// @access public\n  $link-visited: $ibm-color__purple-60 !default !global;\n  $link-inverse-color: #6ea6ff !default !global;\n\n  // Tooltip\n  /// @access public\n  $tooltip-background-color: $inverse-02 !default !global;\n\n  // Button Theme Variables\n  /// @access public\n  $button-font-weight: 400 !default !global;\n  $button-font-size: 0.875rem !default !global;\n  $button-border-radius: 0 !default !global;\n  $button-height: 48px !default !global;\n  $button-padding: 0.875rem 63px 0.875rem 15px !default !global;\n  $button-padding-sm: 0.375rem 63px 0.375rem 15px !default !global;\n  $button-padding-lg: $carbon--spacing-04 !default !global;\n  $button-border-width: 1px !default !global;\n  $button-outline-width: 3px !default !global;\n  $button-outline-offset: -5px !default !global;\n  $button-outline: 1px solid $ibm-color__white-0 !default !global;\n\n  // Accordion (Reverse)\n  /// @access public\n  $accordion-flex-direction: row-reverse !default !global;\n  $accordion-justify-content: flex-start !default !global;\n  $accordion-arrow-margin: 0 $carbon--spacing-05 0 0 !default !global;\n  $accordion-title-margin: 0 0 0 $carbon--spacing-05 !default !global;\n  $accordion-content-padding: 0 0 0 $carbon--spacing-05 !default !global;\n\n  // Card\n  /// @access public\n  $card-text-align: center !default !global;\n  $card-flex-align: center !default !global;\n\n  // Checkbox\n  /// @access public\n  $checkbox-border-width: 2px !default !global;\n\n  // Code Snippet\n  /// @access public\n  $snippet-background-color: $ui-01 !default !global; // TODO: Define for experimental\n  $snippet-border-color: $ui-03 !default !global; // TODO: Define for experimental\n\n  // Content Switcher\n  /// @access public\n  $content-switcher-border-radius: 0px !default !global;\n  $content-switcher-option-border: 1px solid $brand-01 !default !global;\n  $content-switcher-divider: $ui-03 !default !global;\n\n  // Data Table\n  /// @access public\n  $data-table-heading-transform: uppercase !default !global;\n  $data-table-heading-border-bottom: 1px solid $brand-01 !default !global;\n  $data-table-row-height: 2rem !default !global;\n  $data-table-zebra-color: #fcfcfc !default !global;\n  $data-table-column-hover: $hover-selected-ui !default !global;\n\n  // Date Picker\n  /// @access public\n  $date-picker-in-range-background-color: $ibm-color__blue-20 !default !global;\n\n  // Modal\n  /// @access public\n  $modal-border-top: $brand-01 4px solid !default !global;\n  $modal-footer-background-color: $ui-03 !default !global;\n\n  // Notification\n  /// @access public\n  $notification-info-background-color: $ibm-color__blue-10 !default !global;\n  $notification-error-background-color: $ibm-color__red-10 !default !global;\n  $notification-warning-background-color: rgba(#fdd13a, 0.15) !default !global;\n  $notification-success-background-color: $ibm-color__green-10 !default !global;\n\n  // Progress Indicator\n  /// @access public\n  $progress-indicator-bar-width: 1px inset transparent !default !global;\n  $progress-indicator-stroke-width: 5 !default !global;\n  $progress-indicator-line-offset: 0.625rem !default !global;\n\n  //Code Snippet\n  /// @access public\n  $copy-active: $active-ui !default !global;\n  $copy-btn-feedback: $ibm-color__gray-80 !default !global;\n\n  // Radio Button\n  /// @access public\n  $radio-border-width: 1px !default !global;\n\n  // Structured Theme Variables\n  /// @access public\n  $structured-list-padding: 2rem !default !global;\n  $structured-list-text-transform: none !default !global;\n\n  // Slider\n\n  //Tab\n  /// @access public\n  $tab-underline-color: 3px solid $ibm-color__gray-30 !default !global;\n  $tab-underline-color-hover: 3px solid $ibm-color__gray-60 !default !global;\n  $tab-text-disabled: $ibm-color__gray-30 !default !global;\n  $tab-underline-disabled: 3px solid $ibm-color__gray-10 !default !global;\n\n  // Skeleton Loading\n  /// @access public\n  $skeleton: rgba($color__blue-51, 0.1) !default !global; //old $field-01 TODO: Define for experimental\n\n  // ☠️ Deprecated\n  /// @deprecated\n  /// @access public\n  $hover-field: $hover-ui !default !global;\n  $active-01: $active-ui !default !global;\n  $nav-01: $color__navy-gray-1 !default !global;\n  $nav-02: $color__blue-90 !default !global;\n  $nav-03: $color__purple-30 !default !global;\n  $nav-04: $color__purple-60 !default !global;\n  $nav-05: $color__teal-40 !default !global;\n  $nav-06: $color__teal-50 !default !global;\n  $nav-07: $color__blue-30 !default !global;\n  $nav-08: $color__blue-51 !default !global;\n}\n\n@include exports('theme') {\n  @if feature-flag-enabled('components-x') {\n    @include theme--experimental;\n  } @else {\n    @include theme;\n  }\n}\n","//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n/// Common easings for components in the Carbon Design System\n$carbon--easings: (\n  standard: (\n    productive: cubic-bezier(0.2, 0, 0.38, 0.9),\n    expressive: cubic-bezier(0.4, 0.14, 0.3, 1),\n  ),\n  entrance: (\n    productive: cubic-bezier(0, 0, 0.38, 0.9),\n    expressive: cubic-bezier(0, 0, 0.3, 1),\n  ),\n  exit: (\n    productive: cubic-bezier(0.2, 0, 1, 0.9),\n    expressive: cubic-bezier(0.4, 0.14, 1, 1),\n  ),\n);\n\n/// Get the transition-timing-function for a given easing and motion mode.\n/// Easings that are currently supported include: standard, entrance, and exit.\n/// We also offer two modes: productive and expressive.\n/// @param {String} $name - the name of the easing curve to apply\n/// @param {String} $mode - the mode for the easing curve to use\n/// @return {cubic-bezier}\n@function carbon--motion($name, $mode: productive, $easings: $carbon--easings) {\n  @if map-has-key($easings, $name) {\n    $easing: map-get($easings, $name);\n    @if map-has-key($easing, $mode) {\n      @return map-get($easing, $mode);\n    } @else {\n      @error 'Unable to find a mode for the easing #{$easing} called: #{$mode}.';\n    }\n  } @else {\n    @error 'Unable to find an easing named #{$name} in our supported easings.';\n  }\n}\n\n/// Set the transition-timing-function for a given easing and motion mode.\n/// @param {String} $name - the name of the easing curve to apply\n/// @param {String} $mode - the mode for the easing curve to use\n@mixin carbon--motion($name, $mode) {\n  transition-timing-function: carbon--motion($name, $mode);\n}\n","// Code generated by @carbon/colors. DO NOT EDIT.\n//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n/// Define color variables\n/// @access public\n/// @group @carbon/colors\n/// @deprecated Use `$carbon--colors` going forward\n@mixin ibm--colors {\n  $ibm-color__black-100: #000000 !default !global;\n  $ibm-color__blue-10: #edf4ff !default !global;\n  $ibm-color__blue-20: #c9deff !default !global;\n  $ibm-color__blue-30: #97c1ff !default !global;\n  $ibm-color__blue-40: #6ea6ff !default !global;\n  $ibm-color__blue-50: #408bfc !default !global;\n  $ibm-color__blue-60: #0062ff !default !global;\n  $ibm-color__blue-70: #054ada !default !global;\n  $ibm-color__blue-80: #0530ad !default !global;\n  $ibm-color__blue-90: #061f80 !default !global;\n  $ibm-color__blue-100: #051243 !default !global;\n  $ibm-color__cool-gray-10: #f2f4f8 !default !global;\n  $ibm-color__cool-gray-20: #d5d9e0 !default !global;\n  $ibm-color__cool-gray-30: #b9bfc7 !default !global;\n  $ibm-color__cool-gray-40: #9fa5ad !default !global;\n  $ibm-color__cool-gray-50: #868d95 !default !global;\n  $ibm-color__cool-gray-60: #697077 !default !global;\n  $ibm-color__cool-gray-70: #50565b !default !global;\n  $ibm-color__cool-gray-80: #373d42 !default !global;\n  $ibm-color__cool-gray-90: #242a2e !default !global;\n  $ibm-color__cool-gray-100: #13171a !default !global;\n  $ibm-color__cyan-10: #e3f6ff !default !global;\n  $ibm-color__cyan-20: #b3e6ff !default !global;\n  $ibm-color__cyan-30: #6ccaff !default !global;\n  $ibm-color__cyan-40: #30b0ff !default !global;\n  $ibm-color__cyan-50: #1191e6 !default !global;\n  $ibm-color__cyan-60: #0072c3 !default !global;\n  $ibm-color__cyan-70: #0058a1 !default !global;\n  $ibm-color__cyan-80: #003d73 !default !global;\n  $ibm-color__cyan-90: #002b50 !default !global;\n  $ibm-color__cyan-100: #07192b !default !global;\n  $ibm-color__gray-10: #f3f3f3 !default !global;\n  $ibm-color__gray-20: #dcdcdc !default !global;\n  $ibm-color__gray-30: #bebebe !default !global;\n  $ibm-color__gray-40: #a4a4a4 !default !global;\n  $ibm-color__gray-50: #8c8c8c !default !global;\n  $ibm-color__gray-60: #6f6f6f !default !global;\n  $ibm-color__gray-70: #565656 !default !global;\n  $ibm-color__gray-80: #3d3d3d !default !global;\n  $ibm-color__gray-90: #282828 !default !global;\n  $ibm-color__gray-100: #171717 !default !global;\n  $ibm-color__green-10: #dafbe4 !default !global;\n  $ibm-color__green-20: #9deeb2 !default !global;\n  $ibm-color__green-30: #56d679 !default !global;\n  $ibm-color__green-40: #3dbb61 !default !global;\n  $ibm-color__green-50: #24a148 !default !global;\n  $ibm-color__green-60: #198038 !default !global;\n  $ibm-color__green-70: #10642a !default !global;\n  $ibm-color__green-80: #054719 !default !global;\n  $ibm-color__green-90: #01330f !default !global;\n  $ibm-color__green-100: #081b09 !default !global;\n  $ibm-color__magenta-10: #fff0f6 !default !global;\n  $ibm-color__magenta-20: #ffcfe1 !default !global;\n  $ibm-color__magenta-30: #ffa0c2 !default !global;\n  $ibm-color__magenta-40: #fa75a6 !default !global;\n  $ibm-color__magenta-50: #ee538b !default !global;\n  $ibm-color__magenta-60: #d12765 !default !global;\n  $ibm-color__magenta-70: #a11950 !default !global;\n  $ibm-color__magenta-80: #760a3a !default !global;\n  $ibm-color__magenta-90: #57002b !default !global;\n  $ibm-color__magenta-100: #2a0a16 !default !global;\n  $ibm-color__orange-40: #fc7b1e !default !global;\n  $ibm-color__purple-10: #f7f1ff !default !global;\n  $ibm-color__purple-20: #e6d6ff !default !global;\n  $ibm-color__purple-30: #d0b0ff !default !global;\n  $ibm-color__purple-40: #bb8eff !default !global;\n  $ibm-color__purple-50: #a66efa !default !global;\n  $ibm-color__purple-60: #8a3ffc !default !global;\n  $ibm-color__purple-70: #6e32c9 !default !global;\n  $ibm-color__purple-80: #4f2196 !default !global;\n  $ibm-color__purple-90: #38146b !default !global;\n  $ibm-color__purple-100: #1e1033 !default !global;\n  $ibm-color__red-10: #fff0f1 !default !global;\n  $ibm-color__red-20: #fcd0d3 !default !global;\n  $ibm-color__red-30: #ffa4a9 !default !global;\n  $ibm-color__red-40: #ff767c !default !global;\n  $ibm-color__red-50: #fb4b53 !default !global;\n  $ibm-color__red-60: #da1e28 !default !global;\n  $ibm-color__red-70: #a51920 !default !global;\n  $ibm-color__red-80: #750e13 !default !global;\n  $ibm-color__red-90: #570408 !default !global;\n  $ibm-color__red-100: #2c080a !default !global;\n  $ibm-color__teal-10: #dbfbfb !default !global;\n  $ibm-color__teal-20: #92eeee !default !global;\n  $ibm-color__teal-30: #20d5d2 !default !global;\n  $ibm-color__teal-40: #00bab6 !default !global;\n  $ibm-color__teal-50: #009c98 !default !global;\n  $ibm-color__teal-60: #007d79 !default !global;\n  $ibm-color__teal-70: #006161 !default !global;\n  $ibm-color__teal-80: #004548 !default !global;\n  $ibm-color__teal-90: #003137 !default !global;\n  $ibm-color__teal-100: #081a1c !default !global;\n  $ibm-color__warm-gray-10: #f7f3f1 !default !global;\n  $ibm-color__warm-gray-20: #e0dbda !default !global;\n  $ibm-color__warm-gray-30: #c1bcbb !default !global;\n  $ibm-color__warm-gray-40: #a7a2a2 !default !global;\n  $ibm-color__warm-gray-50: #8f8b8b !default !global;\n  $ibm-color__warm-gray-60: #726e6e !default !global;\n  $ibm-color__warm-gray-70: #595555 !default !global;\n  $ibm-color__warm-gray-80: #403c3c !default !global;\n  $ibm-color__warm-gray-90: #2b2828 !default !global;\n  $ibm-color__warm-gray-100: #1a1717 !default !global;\n  $ibm-color__white-0: #ffffff !default !global;\n  $ibm-color__yellow-20: #fdd13a !default !global;\n\n  $ibm-color-map: (\n    'black': (\n      100: #000000\n    ),\n    'blue': (\n      10: #edf4ff,\n      20: #c9deff,\n      30: #97c1ff,\n      40: #6ea6ff,\n      50: #408bfc,\n      60: #0062ff,\n      70: #054ada,\n      80: #0530ad,\n      90: #061f80,\n      100: #051243\n    ),\n    'coolGray': (\n      10: #f2f4f8,\n      20: #d5d9e0,\n      30: #b9bfc7,\n      40: #9fa5ad,\n      50: #868d95,\n      60: #697077,\n      70: #50565b,\n      80: #373d42,\n      90: #242a2e,\n      100: #13171a\n    ),\n    'cyan': (\n      10: #e3f6ff,\n      20: #b3e6ff,\n      30: #6ccaff,\n      40: #30b0ff,\n      50: #1191e6,\n      60: #0072c3,\n      70: #0058a1,\n      80: #003d73,\n      90: #002b50,\n      100: #07192b\n    ),\n    'gray': (\n      10: #f3f3f3,\n      20: #dcdcdc,\n      30: #bebebe,\n      40: #a4a4a4,\n      50: #8c8c8c,\n      60: #6f6f6f,\n      70: #565656,\n      80: #3d3d3d,\n      90: #282828,\n      100: #171717\n    ),\n    'green': (\n      10: #dafbe4,\n      20: #9deeb2,\n      30: #56d679,\n      40: #3dbb61,\n      50: #24a148,\n      60: #198038,\n      70: #10642a,\n      80: #054719,\n      90: #01330f,\n      100: #081b09\n    ),\n    'magenta': (\n      10: #fff0f6,\n      20: #ffcfe1,\n      30: #ffa0c2,\n      40: #fa75a6,\n      50: #ee538b,\n      60: #d12765,\n      70: #a11950,\n      80: #760a3a,\n      90: #57002b,\n      100: #2a0a16\n    ),\n    'orange': (\n      40: #fc7b1e\n    ),\n    'purple': (\n      10: #f7f1ff,\n      20: #e6d6ff,\n      30: #d0b0ff,\n      40: #bb8eff,\n      50: #a66efa,\n      60: #8a3ffc,\n      70: #6e32c9,\n      80: #4f2196,\n      90: #38146b,\n      100: #1e1033\n    ),\n    'red': (\n      10: #fff0f1,\n      20: #fcd0d3,\n      30: #ffa4a9,\n      40: #ff767c,\n      50: #fb4b53,\n      60: #da1e28,\n      70: #a51920,\n      80: #750e13,\n      90: #570408,\n      100: #2c080a\n    ),\n    'teal': (\n      10: #dbfbfb,\n      20: #92eeee,\n      30: #20d5d2,\n      40: #00bab6,\n      50: #009c98,\n      60: #007d79,\n      70: #006161,\n      80: #004548,\n      90: #003137,\n      100: #081a1c\n    ),\n    'warmGray': (\n      10: #f7f3f1,\n      20: #e0dbda,\n      30: #c1bcbb,\n      40: #a7a2a2,\n      50: #8f8b8b,\n      60: #726e6e,\n      70: #595555,\n      80: #403c3c,\n      90: #2b2828,\n      100: #1a1717\n    ),\n    'white': (\n      0: #ffffff\n    ),\n    'yellow': (\n      20: #fdd13a\n    )\n  ) !default !global;\n}\n\n/// Define color variables\n/// @access public\n/// @group @carbon/colors\n@mixin carbon--colors {\n  $carbon--black-100: #000000 !default !global;\n  $carbon--blue-10: #edf4ff !default !global;\n  $carbon--blue-20: #c9deff !default !global;\n  $carbon--blue-30: #97c1ff !default !global;\n  $carbon--blue-40: #6ea6ff !default !global;\n  $carbon--blue-50: #408bfc !default !global;\n  $carbon--blue-60: #0062ff !default !global;\n  $carbon--blue-70: #054ada !default !global;\n  $carbon--blue-80: #0530ad !default !global;\n  $carbon--blue-90: #061f80 !default !global;\n  $carbon--blue-100: #051243 !default !global;\n  $carbon--cool-gray-10: #f2f4f8 !default !global;\n  $carbon--cool-gray-20: #d5d9e0 !default !global;\n  $carbon--cool-gray-30: #b9bfc7 !default !global;\n  $carbon--cool-gray-40: #9fa5ad !default !global;\n  $carbon--cool-gray-50: #868d95 !default !global;\n  $carbon--cool-gray-60: #697077 !default !global;\n  $carbon--cool-gray-70: #50565b !default !global;\n  $carbon--cool-gray-80: #373d42 !default !global;\n  $carbon--cool-gray-90: #242a2e !default !global;\n  $carbon--cool-gray-100: #13171a !default !global;\n  $carbon--cyan-10: #e3f6ff !default !global;\n  $carbon--cyan-20: #b3e6ff !default !global;\n  $carbon--cyan-30: #6ccaff !default !global;\n  $carbon--cyan-40: #30b0ff !default !global;\n  $carbon--cyan-50: #1191e6 !default !global;\n  $carbon--cyan-60: #0072c3 !default !global;\n  $carbon--cyan-70: #0058a1 !default !global;\n  $carbon--cyan-80: #003d73 !default !global;\n  $carbon--cyan-90: #002b50 !default !global;\n  $carbon--cyan-100: #07192b !default !global;\n  $carbon--gray-10: #f3f3f3 !default !global;\n  $carbon--gray-20: #dcdcdc !default !global;\n  $carbon--gray-30: #bebebe !default !global;\n  $carbon--gray-40: #a4a4a4 !default !global;\n  $carbon--gray-50: #8c8c8c !default !global;\n  $carbon--gray-60: #6f6f6f !default !global;\n  $carbon--gray-70: #565656 !default !global;\n  $carbon--gray-80: #3d3d3d !default !global;\n  $carbon--gray-90: #282828 !default !global;\n  $carbon--gray-100: #171717 !default !global;\n  $carbon--green-10: #dafbe4 !default !global;\n  $carbon--green-20: #9deeb2 !default !global;\n  $carbon--green-30: #56d679 !default !global;\n  $carbon--green-40: #3dbb61 !default !global;\n  $carbon--green-50: #24a148 !default !global;\n  $carbon--green-60: #198038 !default !global;\n  $carbon--green-70: #10642a !default !global;\n  $carbon--green-80: #054719 !default !global;\n  $carbon--green-90: #01330f !default !global;\n  $carbon--green-100: #081b09 !default !global;\n  $carbon--magenta-10: #fff0f6 !default !global;\n  $carbon--magenta-20: #ffcfe1 !default !global;\n  $carbon--magenta-30: #ffa0c2 !default !global;\n  $carbon--magenta-40: #fa75a6 !default !global;\n  $carbon--magenta-50: #ee538b !default !global;\n  $carbon--magenta-60: #d12765 !default !global;\n  $carbon--magenta-70: #a11950 !default !global;\n  $carbon--magenta-80: #760a3a !default !global;\n  $carbon--magenta-90: #57002b !default !global;\n  $carbon--magenta-100: #2a0a16 !default !global;\n  $carbon--orange-40: #fc7b1e !default !global;\n  $carbon--purple-10: #f7f1ff !default !global;\n  $carbon--purple-20: #e6d6ff !default !global;\n  $carbon--purple-30: #d0b0ff !default !global;\n  $carbon--purple-40: #bb8eff !default !global;\n  $carbon--purple-50: #a66efa !default !global;\n  $carbon--purple-60: #8a3ffc !default !global;\n  $carbon--purple-70: #6e32c9 !default !global;\n  $carbon--purple-80: #4f2196 !default !global;\n  $carbon--purple-90: #38146b !default !global;\n  $carbon--purple-100: #1e1033 !default !global;\n  $carbon--red-10: #fff0f1 !default !global;\n  $carbon--red-20: #fcd0d3 !default !global;\n  $carbon--red-30: #ffa4a9 !default !global;\n  $carbon--red-40: #ff767c !default !global;\n  $carbon--red-50: #fb4b53 !default !global;\n  $carbon--red-60: #da1e28 !default !global;\n  $carbon--red-70: #a51920 !default !global;\n  $carbon--red-80: #750e13 !default !global;\n  $carbon--red-90: #570408 !default !global;\n  $carbon--red-100: #2c080a !default !global;\n  $carbon--teal-10: #dbfbfb !default !global;\n  $carbon--teal-20: #92eeee !default !global;\n  $carbon--teal-30: #20d5d2 !default !global;\n  $carbon--teal-40: #00bab6 !default !global;\n  $carbon--teal-50: #009c98 !default !global;\n  $carbon--teal-60: #007d79 !default !global;\n  $carbon--teal-70: #006161 !default !global;\n  $carbon--teal-80: #004548 !default !global;\n  $carbon--teal-90: #003137 !default !global;\n  $carbon--teal-100: #081a1c !default !global;\n  $carbon--warm-gray-10: #f7f3f1 !default !global;\n  $carbon--warm-gray-20: #e0dbda !default !global;\n  $carbon--warm-gray-30: #c1bcbb !default !global;\n  $carbon--warm-gray-40: #a7a2a2 !default !global;\n  $carbon--warm-gray-50: #8f8b8b !default !global;\n  $carbon--warm-gray-60: #726e6e !default !global;\n  $carbon--warm-gray-70: #595555 !default !global;\n  $carbon--warm-gray-80: #403c3c !default !global;\n  $carbon--warm-gray-90: #2b2828 !default !global;\n  $carbon--warm-gray-100: #1a1717 !default !global;\n  $carbon--white-0: #ffffff !default !global;\n  $carbon--yellow-20: #fdd13a !default !global;\n  $black-100: #000000 !default !global;\n  $blue-10: #edf4ff !default !global;\n  $blue-20: #c9deff !default !global;\n  $blue-30: #97c1ff !default !global;\n  $blue-40: #6ea6ff !default !global;\n  $blue-50: #408bfc !default !global;\n  $blue-60: #0062ff !default !global;\n  $blue-70: #054ada !default !global;\n  $blue-80: #0530ad !default !global;\n  $blue-90: #061f80 !default !global;\n  $blue-100: #051243 !default !global;\n  $cool-gray-10: #f2f4f8 !default !global;\n  $cool-gray-20: #d5d9e0 !default !global;\n  $cool-gray-30: #b9bfc7 !default !global;\n  $cool-gray-40: #9fa5ad !default !global;\n  $cool-gray-50: #868d95 !default !global;\n  $cool-gray-60: #697077 !default !global;\n  $cool-gray-70: #50565b !default !global;\n  $cool-gray-80: #373d42 !default !global;\n  $cool-gray-90: #242a2e !default !global;\n  $cool-gray-100: #13171a !default !global;\n  $cyan-10: #e3f6ff !default !global;\n  $cyan-20: #b3e6ff !default !global;\n  $cyan-30: #6ccaff !default !global;\n  $cyan-40: #30b0ff !default !global;\n  $cyan-50: #1191e6 !default !global;\n  $cyan-60: #0072c3 !default !global;\n  $cyan-70: #0058a1 !default !global;\n  $cyan-80: #003d73 !default !global;\n  $cyan-90: #002b50 !default !global;\n  $cyan-100: #07192b !default !global;\n  $gray-10: #f3f3f3 !default !global;\n  $gray-20: #dcdcdc !default !global;\n  $gray-30: #bebebe !default !global;\n  $gray-40: #a4a4a4 !default !global;\n  $gray-50: #8c8c8c !default !global;\n  $gray-60: #6f6f6f !default !global;\n  $gray-70: #565656 !default !global;\n  $gray-80: #3d3d3d !default !global;\n  $gray-90: #282828 !default !global;\n  $gray-100: #171717 !default !global;\n  $green-10: #dafbe4 !default !global;\n  $green-20: #9deeb2 !default !global;\n  $green-30: #56d679 !default !global;\n  $green-40: #3dbb61 !default !global;\n  $green-50: #24a148 !default !global;\n  $green-60: #198038 !default !global;\n  $green-70: #10642a !default !global;\n  $green-80: #054719 !default !global;\n  $green-90: #01330f !default !global;\n  $green-100: #081b09 !default !global;\n  $magenta-10: #fff0f6 !default !global;\n  $magenta-20: #ffcfe1 !default !global;\n  $magenta-30: #ffa0c2 !default !global;\n  $magenta-40: #fa75a6 !default !global;\n  $magenta-50: #ee538b !default !global;\n  $magenta-60: #d12765 !default !global;\n  $magenta-70: #a11950 !default !global;\n  $magenta-80: #760a3a !default !global;\n  $magenta-90: #57002b !default !global;\n  $magenta-100: #2a0a16 !default !global;\n  $orange-40: #fc7b1e !default !global;\n  $purple-10: #f7f1ff !default !global;\n  $purple-20: #e6d6ff !default !global;\n  $purple-30: #d0b0ff !default !global;\n  $purple-40: #bb8eff !default !global;\n  $purple-50: #a66efa !default !global;\n  $purple-60: #8a3ffc !default !global;\n  $purple-70: #6e32c9 !default !global;\n  $purple-80: #4f2196 !default !global;\n  $purple-90: #38146b !default !global;\n  $purple-100: #1e1033 !default !global;\n  $red-10: #fff0f1 !default !global;\n  $red-20: #fcd0d3 !default !global;\n  $red-30: #ffa4a9 !default !global;\n  $red-40: #ff767c !default !global;\n  $red-50: #fb4b53 !default !global;\n  $red-60: #da1e28 !default !global;\n  $red-70: #a51920 !default !global;\n  $red-80: #750e13 !default !global;\n  $red-90: #570408 !default !global;\n  $red-100: #2c080a !default !global;\n  $teal-10: #dbfbfb !default !global;\n  $teal-20: #92eeee !default !global;\n  $teal-30: #20d5d2 !default !global;\n  $teal-40: #00bab6 !default !global;\n  $teal-50: #009c98 !default !global;\n  $teal-60: #007d79 !default !global;\n  $teal-70: #006161 !default !global;\n  $teal-80: #004548 !default !global;\n  $teal-90: #003137 !default !global;\n  $teal-100: #081a1c !default !global;\n  $warm-gray-10: #f7f3f1 !default !global;\n  $warm-gray-20: #e0dbda !default !global;\n  $warm-gray-30: #c1bcbb !default !global;\n  $warm-gray-40: #a7a2a2 !default !global;\n  $warm-gray-50: #8f8b8b !default !global;\n  $warm-gray-60: #726e6e !default !global;\n  $warm-gray-70: #595555 !default !global;\n  $warm-gray-80: #403c3c !default !global;\n  $warm-gray-90: #2b2828 !default !global;\n  $warm-gray-100: #1a1717 !default !global;\n  $white-0: #ffffff !default !global;\n  $yellow-20: #fdd13a !default !global;\n  $carbon--colors: (\n    'black': (\n      100: #000000\n    ),\n    'blue': (\n      10: #edf4ff,\n      20: #c9deff,\n      30: #97c1ff,\n      40: #6ea6ff,\n      50: #408bfc,\n      60: #0062ff,\n      70: #054ada,\n      80: #0530ad,\n      90: #061f80,\n      100: #051243\n    ),\n    'coolGray': (\n      10: #f2f4f8,\n      20: #d5d9e0,\n      30: #b9bfc7,\n      40: #9fa5ad,\n      50: #868d95,\n      60: #697077,\n      70: #50565b,\n      80: #373d42,\n      90: #242a2e,\n      100: #13171a\n    ),\n    'cyan': (\n      10: #e3f6ff,\n      20: #b3e6ff,\n      30: #6ccaff,\n      40: #30b0ff,\n      50: #1191e6,\n      60: #0072c3,\n      70: #0058a1,\n      80: #003d73,\n      90: #002b50,\n      100: #07192b\n    ),\n    'gray': (\n      10: #f3f3f3,\n      20: #dcdcdc,\n      30: #bebebe,\n      40: #a4a4a4,\n      50: #8c8c8c,\n      60: #6f6f6f,\n      70: #565656,\n      80: #3d3d3d,\n      90: #282828,\n      100: #171717\n    ),\n    'green': (\n      10: #dafbe4,\n      20: #9deeb2,\n      30: #56d679,\n      40: #3dbb61,\n      50: #24a148,\n      60: #198038,\n      70: #10642a,\n      80: #054719,\n      90: #01330f,\n      100: #081b09\n    ),\n    'magenta': (\n      10: #fff0f6,\n      20: #ffcfe1,\n      30: #ffa0c2,\n      40: #fa75a6,\n      50: #ee538b,\n      60: #d12765,\n      70: #a11950,\n      80: #760a3a,\n      90: #57002b,\n      100: #2a0a16\n    ),\n    'orange': (\n      40: #fc7b1e\n    ),\n    'purple': (\n      10: #f7f1ff,\n      20: #e6d6ff,\n      30: #d0b0ff,\n      40: #bb8eff,\n      50: #a66efa,\n      60: #8a3ffc,\n      70: #6e32c9,\n      80: #4f2196,\n      90: #38146b,\n      100: #1e1033\n    ),\n    'red': (\n      10: #fff0f1,\n      20: #fcd0d3,\n      30: #ffa4a9,\n      40: #ff767c,\n      50: #fb4b53,\n      60: #da1e28,\n      70: #a51920,\n      80: #750e13,\n      90: #570408,\n      100: #2c080a\n    ),\n    'teal': (\n      10: #dbfbfb,\n      20: #92eeee,\n      30: #20d5d2,\n      40: #00bab6,\n      50: #009c98,\n      60: #007d79,\n      70: #006161,\n      80: #004548,\n      90: #003137,\n      100: #081a1c\n    ),\n    'warmGray': (\n      10: #f7f3f1,\n      20: #e0dbda,\n      30: #c1bcbb,\n      40: #a7a2a2,\n      50: #8f8b8b,\n      60: #726e6e,\n      70: #595555,\n      80: #403c3c,\n      90: #2b2828,\n      100: #1a1717\n    ),\n    'white': (\n      0: #ffffff\n    ),\n    'yellow': (\n      20: #fdd13a\n    )\n  ) !default !global;\n}\n","//\n// Copyright IBM Corp. 2016, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n//--------------------\n// EXPERIMENTAL COLORS\n//--------------------\n@import './vendor/@carbon/colors/scss/colors';\n\n//--------------------\n// CLASSIC COLORS\n//--------------------\n\n// UI Color Scheme\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__blue-20: #7cc7ff !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__blue-30: #5aaafa !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__blue-40: #5596e6 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__blue-50: #4178be !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__blue-90: #152935 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__navy-gray-1: #0f212e !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__navy-gray-2: #20343e !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__navy-gray-3: #2d3f49 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__navy-gray-4: #394b54 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__navy-gray-5: #42535c !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__navy-gray-6: #5a6872 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__navy-gray-7: #8c9ba5 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__navy-gray-8: #dfe6eb !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__navy-gray-9: #eff2f5 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__white: #fff !default;\n\n// Light UI Color Scheme\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__blue-51: #3d70b2 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__gray-1: #dfe3e6 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__gray-2: #f0f3f6 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__gray-3: #f5f7fa !default;\n\n// Accent Colors\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__blue-10: #c0e6ff !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__blue-60: #325c80 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__teal-10: #a7fae6 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__teal-20: #6eedd8 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__teal-30: #41d6c3 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__teal-40: #00b4a0 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__teal-50: #008571 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__teal-60: #006d5d !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__green-10: #c8f08f !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__green-20: #b4e051 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__green-30: #8cd211 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__green-40: #5aa700 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__green-50: #4b8400 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__green-60: #2d660a !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__yellow-10: #fde876 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__yellow-20: #fdd600 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__yellow-30: #efc100 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__yellow-60: #735f00 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__orange-10: #ffd4a0 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__orange-20: #ffa573 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__orange-30: #ff7832 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__orange-60: #a53725 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__red-10: #ffd2dd !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__red-30: #ff7d87 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__red-40: #ff5050 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__red-50: #e71d32 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__red-60: #ad1625 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__purple-10: #eed2ff !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__purple-20: #d7aaff !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__purple-30: #ba8ff7 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__purple-40: #af6ee8 !default;\n/// @deprecated (For v10) Use `@include carbon--colors()`\n$color__purple-60: #734098 !default;\n","$prefix: 'bx' !default;\n\n@import \"@carbon/colors/scss/colors\";\n@import \"@carbon/layout/scss/layout\";\n@import \"@carbon/themes/scss/themes\";\n@import '@carbon/type/scss/styles';\n// Grid-specific import\n// See https://github.com/IBM/carbon-elements/blob/master/packages/grid/README.md\n// @import '@carbon/grid/scss/grid';\n// Grid-specific layout\n// See https://github.com/IBM/carbon-elements/blob/master/packages/layout/README.md\n// @import '@carbon/layout/scss/layout';\n\n@import \"@carbon/type/scss/_reset.scss\";\n@include carbon--type-reset();\n\n// Faccio il reset dei css\n@import '@carbon/type/scss/font-face/sans';\n@include carbon--font-face-sans();\n$font-family: 'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif;\n\n// @include carbon--font-face-serif();\n// @include carbon--font-face-mono();\n@import '@carbon/type/scss/classes';\n@include carbon--type-classes();\n\n//---------------------------------------\n// Set Theme\n// See https://github.com/IBM/carbon-elements/blob/master/packages/themes/README.md\n//---------------------------------------\n\n// Set the Dark Theme\n$carbon--theme: $carbon--theme--g90;\n// Use the gray 100 theme\n@include carbon--theme();\n\n\n\n// Abilito le feature experiemental\n$feature-flags: (\n  ui-shell: true,\n  components-x: true,\n  grid-columns-16: true,\n);\n\n//---------------------------------------\n// Import all component\n//---------------------------------------\n// @import 'carbon-components/scss/globals/scss/styles';\n\n\n//---------------------------------------\n// Import Specific component\n//---------------------------------------\n// $css--plex: true !default;\n// $font-family: 'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif;\n@import '@carbon/import-once/scss/import-once';\n@import 'carbon-components/scss/components/button/button';\n// @import 'carbon-components/scss/components/checkbox/checkbox';\n\n\nhtml {\n  // font-size: calc(0.4em + 1vmin);\n  height:100%;\n}\n\nbody {\n  background: $ui-background;\n  font-family: $font-family;\n  overflow: hidden;\n  color: $text-01;\n  height:100%;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  display: flex;\n  justify-content: center;\n}\n\n#app{\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    height: 40%;\n    width: 50%;\n    align-self: center;\n    border: 3px solid $carbon--blue-50;\n}\n\n"]}